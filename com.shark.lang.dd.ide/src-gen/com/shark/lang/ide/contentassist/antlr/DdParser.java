/*
 * generated by Xtext 2.23.0
 */
package com.shark.lang.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import com.shark.lang.ide.contentassist.antlr.internal.InternalDdParser;
import com.shark.lang.services.DdGrammarAccess;
import java.util.Map;
import org.antlr.runtime.CharStream;
import org.antlr.runtime.TokenSource;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class DdParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(DdGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, DdGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getSharkExpressionAccess().getAlternatives(), "rule__SharkExpression__Alternatives");
			builder.put(grammarAccess.getBinaryExpressionAccess().getAlternatives_0(), "rule__BinaryExpression__Alternatives_0");
			builder.put(grammarAccess.getUnaryExpressionAccess().getAlternatives_0(), "rule__UnaryExpression__Alternatives_0");
			builder.put(grammarAccess.getAddExpressionAccess().getAlternatives_0(), "rule__AddExpression__Alternatives_0");
			builder.put(grammarAccess.getAddExpressionAccess().getOpAlternatives_0_0_2_0(), "rule__AddExpression__OpAlternatives_0_0_2_0");
			builder.put(grammarAccess.getAddExpressionAccess().getOpAlternatives_0_1_2_0(), "rule__AddExpression__OpAlternatives_0_1_2_0");
			builder.put(grammarAccess.getAddExpressionAccess().getOpAlternatives_0_2_2_0(), "rule__AddExpression__OpAlternatives_0_2_2_0");
			builder.put(grammarAccess.getMultExpressionAccess().getAlternatives_0(), "rule__MultExpression__Alternatives_0");
			builder.put(grammarAccess.getAndExpressionAccess().getAlternatives_0(), "rule__AndExpression__Alternatives_0");
			builder.put(grammarAccess.getOrExpressionAccess().getAlternatives_0(), "rule__OrExpression__Alternatives_0");
			builder.put(grammarAccess.getCatExpressionAccess().getAlternatives_0(), "rule__CatExpression__Alternatives_0");
			builder.put(grammarAccess.getRangeExpressionAccess().getAlternatives(), "rule__RangeExpression__Alternatives");
			builder.put(grammarAccess.getTerminalExpressionAccess().getAlternatives_0(), "rule__TerminalExpression__Alternatives_0");
			builder.put(grammarAccess.getBinaryOperatorAccess().getAlternatives(), "rule__BinaryOperator__Alternatives");
			builder.put(grammarAccess.getUnaryOperatorAccess().getAlternatives(), "rule__UnaryOperator__Alternatives");
			builder.put(grammarAccess.getBooleanAccess().getAlternatives(), "rule__Boolean__Alternatives");
			builder.put(grammarAccess.getDataTypeAccess().getAlternatives(), "rule__DataType__Alternatives");
			builder.put(grammarAccess.getDataModelFragmentAccess().getGroup(), "rule__DataModelFragment__Group__0");
			builder.put(grammarAccess.getConstantAccess().getGroup(), "rule__Constant__Group__0");
			builder.put(grammarAccess.getConstantAccess().getGroup_5(), "rule__Constant__Group_5__0");
			builder.put(grammarAccess.getEntityAccess().getGroup(), "rule__Entity__Group__0");
			builder.put(grammarAccess.getEntityAccess().getGroup_2(), "rule__Entity__Group_2__0");
			builder.put(grammarAccess.getAttributeAccess().getGroup(), "rule__Attribute__Group__0");
			builder.put(grammarAccess.getAttributeAccess().getGroup_5(), "rule__Attribute__Group_5__0");
			builder.put(grammarAccess.getAttributeSizeAccess().getGroup(), "rule__AttributeSize__Group__0");
			builder.put(grammarAccess.getAttributeSizeAccess().getGroup_2(), "rule__AttributeSize__Group_2__0");
			builder.put(grammarAccess.getArraySizeAccess().getGroup(), "rule__ArraySize__Group__0");
			builder.put(grammarAccess.getRelationshipAccess().getGroup(), "rule__Relationship__Group__0");
			builder.put(grammarAccess.getConstraintAccess().getGroup(), "rule__Constraint__Group__0");
			builder.put(grammarAccess.getConstraintAccess().getGroup_2(), "rule__Constraint__Group_2__0");
			builder.put(grammarAccess.getEntitiesListEltAccess().getGroup(), "rule__EntitiesListElt__Group__0");
			builder.put(grammarAccess.getCheckExpressionAccess().getGroup(), "rule__CheckExpression__Group__0");
			builder.put(grammarAccess.getBinaryExpressionAccess().getGroup(), "rule__BinaryExpression__Group__0");
			builder.put(grammarAccess.getBinaryExpressionAccess().getGroup_0_0(), "rule__BinaryExpression__Group_0_0__0");
			builder.put(grammarAccess.getBinaryExpressionAccess().getGroup_0_1(), "rule__BinaryExpression__Group_0_1__0");
			builder.put(grammarAccess.getBinaryExpressionAccess().getGroup_0_2(), "rule__BinaryExpression__Group_0_2__0");
			builder.put(grammarAccess.getBinaryExpressionAccess().getGroup_1(), "rule__BinaryExpression__Group_1__0");
			builder.put(grammarAccess.getUnaryExpressionAccess().getGroup(), "rule__UnaryExpression__Group__0");
			builder.put(grammarAccess.getUnaryExpressionAccess().getGroup_0_0(), "rule__UnaryExpression__Group_0_0__0");
			builder.put(grammarAccess.getUnaryExpressionAccess().getGroup_0_1(), "rule__UnaryExpression__Group_0_1__0");
			builder.put(grammarAccess.getUnaryExpressionAccess().getGroup_0_2(), "rule__UnaryExpression__Group_0_2__0");
			builder.put(grammarAccess.getUnaryExpressionAccess().getGroup_1(), "rule__UnaryExpression__Group_1__0");
			builder.put(grammarAccess.getAddExpressionAccess().getGroup(), "rule__AddExpression__Group__0");
			builder.put(grammarAccess.getAddExpressionAccess().getGroup_0_0(), "rule__AddExpression__Group_0_0__0");
			builder.put(grammarAccess.getAddExpressionAccess().getGroup_0_1(), "rule__AddExpression__Group_0_1__0");
			builder.put(grammarAccess.getAddExpressionAccess().getGroup_0_2(), "rule__AddExpression__Group_0_2__0");
			builder.put(grammarAccess.getAddExpressionAccess().getGroup_1(), "rule__AddExpression__Group_1__0");
			builder.put(grammarAccess.getAddExpressionEltAccess().getGroup(), "rule__AddExpressionElt__Group__0");
			builder.put(grammarAccess.getMultExpressionAccess().getGroup(), "rule__MultExpression__Group__0");
			builder.put(grammarAccess.getMultExpressionAccess().getGroup_0_0(), "rule__MultExpression__Group_0_0__0");
			builder.put(grammarAccess.getMultExpressionAccess().getGroup_0_1(), "rule__MultExpression__Group_0_1__0");
			builder.put(grammarAccess.getMultExpressionAccess().getGroup_0_2(), "rule__MultExpression__Group_0_2__0");
			builder.put(grammarAccess.getMultExpressionAccess().getGroup_1(), "rule__MultExpression__Group_1__0");
			builder.put(grammarAccess.getMultExpressionEltAccess().getGroup(), "rule__MultExpressionElt__Group__0");
			builder.put(grammarAccess.getAndExpressionAccess().getGroup(), "rule__AndExpression__Group__0");
			builder.put(grammarAccess.getAndExpressionAccess().getGroup_0_0(), "rule__AndExpression__Group_0_0__0");
			builder.put(grammarAccess.getAndExpressionAccess().getGroup_0_1(), "rule__AndExpression__Group_0_1__0");
			builder.put(grammarAccess.getAndExpressionAccess().getGroup_0_2(), "rule__AndExpression__Group_0_2__0");
			builder.put(grammarAccess.getAndExpressionAccess().getGroup_1(), "rule__AndExpression__Group_1__0");
			builder.put(grammarAccess.getAndExpressionEltAccess().getGroup(), "rule__AndExpressionElt__Group__0");
			builder.put(grammarAccess.getOrExpressionAccess().getGroup(), "rule__OrExpression__Group__0");
			builder.put(grammarAccess.getOrExpressionAccess().getGroup_0_0(), "rule__OrExpression__Group_0_0__0");
			builder.put(grammarAccess.getOrExpressionAccess().getGroup_0_1(), "rule__OrExpression__Group_0_1__0");
			builder.put(grammarAccess.getOrExpressionAccess().getGroup_0_2(), "rule__OrExpression__Group_0_2__0");
			builder.put(grammarAccess.getOrExpressionAccess().getGroup_1(), "rule__OrExpression__Group_1__0");
			builder.put(grammarAccess.getOrExpressionEltAccess().getGroup(), "rule__OrExpressionElt__Group__0");
			builder.put(grammarAccess.getCatExpressionAccess().getGroup(), "rule__CatExpression__Group__0");
			builder.put(grammarAccess.getCatExpressionAccess().getGroup_0_0(), "rule__CatExpression__Group_0_0__0");
			builder.put(grammarAccess.getCatExpressionAccess().getGroup_0_1(), "rule__CatExpression__Group_0_1__0");
			builder.put(grammarAccess.getCatExpressionAccess().getGroup_0_2(), "rule__CatExpression__Group_0_2__0");
			builder.put(grammarAccess.getCatExpressionAccess().getGroup_1(), "rule__CatExpression__Group_1__0");
			builder.put(grammarAccess.getCatExpressionEltAccess().getGroup(), "rule__CatExpressionElt__Group__0");
			builder.put(grammarAccess.getListExpressionAccess().getGroup(), "rule__ListExpression__Group__0");
			builder.put(grammarAccess.getListExpressionAccess().getGroup_4(), "rule__ListExpression__Group_4__0");
			builder.put(grammarAccess.getListExpressionEltAccess().getGroup(), "rule__ListExpressionElt__Group__0");
			builder.put(grammarAccess.getRangeExpressionAccess().getGroup_0(), "rule__RangeExpression__Group_0__0");
			builder.put(grammarAccess.getRangeExpressionAccess().getGroup_1(), "rule__RangeExpression__Group_1__0");
			builder.put(grammarAccess.getTerminalExpressionAccess().getGroup(), "rule__TerminalExpression__Group__0");
			builder.put(grammarAccess.getTerminalExpressionAccess().getGroup_0_0(), "rule__TerminalExpression__Group_0_0__0");
			builder.put(grammarAccess.getTerminalExpressionAccess().getGroup_0_1(), "rule__TerminalExpression__Group_0_1__0");
			builder.put(grammarAccess.getTerminalExpressionAccess().getGroup_0_2(), "rule__TerminalExpression__Group_0_2__0");
			builder.put(grammarAccess.getTerminalExpressionAccess().getGroup_0_3(), "rule__TerminalExpression__Group_0_3__0");
			builder.put(grammarAccess.getTerminalExpressionAccess().getGroup_0_4(), "rule__TerminalExpression__Group_0_4__0");
			builder.put(grammarAccess.getTerminalExpressionAccess().getGroup_0_5(), "rule__TerminalExpression__Group_0_5__0");
			builder.put(grammarAccess.getTerminalExpressionAccess().getGroup_0_6(), "rule__TerminalExpression__Group_0_6__0");
			builder.put(grammarAccess.getTerminalExpressionAccess().getGroup_0_7(), "rule__TerminalExpression__Group_0_7__0");
			builder.put(grammarAccess.getTerminalExpressionAccess().getGroup_1(), "rule__TerminalExpression__Group_1__0");
			builder.put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
			builder.put(grammarAccess.getQualifiedNameAccess().getGroup_0(), "rule__QualifiedName__Group_0__0");
			builder.put(grammarAccess.getLineCommentAccess().getGroup(), "rule__LineComment__Group__0");
			builder.put(grammarAccess.getTrailCommentAccess().getGroup(), "rule__TrailComment__Group__0");
			builder.put(grammarAccess.getDataModelFragmentAccess().getModelDescAssignment_0(), "rule__DataModelFragment__ModelDescAssignment_0");
			builder.put(grammarAccess.getDataModelFragmentAccess().getNameAssignment_2(), "rule__DataModelFragment__NameAssignment_2");
			builder.put(grammarAccess.getDataModelFragmentAccess().getConstantsAssignment_4(), "rule__DataModelFragment__ConstantsAssignment_4");
			builder.put(grammarAccess.getDataModelFragmentAccess().getEntitiesAssignment_5(), "rule__DataModelFragment__EntitiesAssignment_5");
			builder.put(grammarAccess.getDataModelFragmentAccess().getConstraintsAssignment_6(), "rule__DataModelFragment__ConstraintsAssignment_6");
			builder.put(grammarAccess.getConstantAccess().getExtraAttrDescAssignment_0(), "rule__Constant__ExtraAttrDescAssignment_0");
			builder.put(grammarAccess.getConstantAccess().getDataTypeAssignment_1(), "rule__Constant__DataTypeAssignment_1");
			builder.put(grammarAccess.getConstantAccess().getAttributeSizeAssignment_2(), "rule__Constant__AttributeSizeAssignment_2");
			builder.put(grammarAccess.getConstantAccess().getArraySizeAssignment_3(), "rule__Constant__ArraySizeAssignment_3");
			builder.put(grammarAccess.getConstantAccess().getNameAssignment_4(), "rule__Constant__NameAssignment_4");
			builder.put(grammarAccess.getConstantAccess().getDefaultValueAssignment_5_1(), "rule__Constant__DefaultValueAssignment_5_1");
			builder.put(grammarAccess.getConstantAccess().getAttrDescAssignment_6(), "rule__Constant__AttrDescAssignment_6");
			builder.put(grammarAccess.getEntityAccess().getEntityDescLinesAssignment_0(), "rule__Entity__EntityDescLinesAssignment_0");
			builder.put(grammarAccess.getEntityAccess().getNameAssignment_1(), "rule__Entity__NameAssignment_1");
			builder.put(grammarAccess.getEntityAccess().getExtendsAssignment_2_1(), "rule__Entity__ExtendsAssignment_2_1");
			builder.put(grammarAccess.getEntityAccess().getAttributesAssignment_5(), "rule__Entity__AttributesAssignment_5");
			builder.put(grammarAccess.getEntityAccess().getRelationshipsAssignment_6(), "rule__Entity__RelationshipsAssignment_6");
			builder.put(grammarAccess.getAttributeAccess().getExtraAttrDescAssignment_0(), "rule__Attribute__ExtraAttrDescAssignment_0");
			builder.put(grammarAccess.getAttributeAccess().getDataTypeAssignment_1(), "rule__Attribute__DataTypeAssignment_1");
			builder.put(grammarAccess.getAttributeAccess().getAttributeSizeAssignment_2(), "rule__Attribute__AttributeSizeAssignment_2");
			builder.put(grammarAccess.getAttributeAccess().getArraySizeAssignment_3(), "rule__Attribute__ArraySizeAssignment_3");
			builder.put(grammarAccess.getAttributeAccess().getNameAssignment_4(), "rule__Attribute__NameAssignment_4");
			builder.put(grammarAccess.getAttributeAccess().getDefaultValueAssignment_5_1(), "rule__Attribute__DefaultValueAssignment_5_1");
			builder.put(grammarAccess.getAttributeAccess().getPrimaryKeyAssignment_6(), "rule__Attribute__PrimaryKeyAssignment_6");
			builder.put(grammarAccess.getAttributeAccess().getPartitionKeyAssignment_7(), "rule__Attribute__PartitionKeyAssignment_7");
			builder.put(grammarAccess.getAttributeAccess().getMandatoryAssignment_8(), "rule__Attribute__MandatoryAssignment_8");
			builder.put(grammarAccess.getAttributeAccess().getDeprecatedAssignment_9(), "rule__Attribute__DeprecatedAssignment_9");
			builder.put(grammarAccess.getAttributeAccess().getAttrDescAssignment_10(), "rule__Attribute__AttrDescAssignment_10");
			builder.put(grammarAccess.getAttributeSizeAccess().getLengthAssignment_1(), "rule__AttributeSize__LengthAssignment_1");
			builder.put(grammarAccess.getAttributeSizeAccess().getPrecisionAssignment_2_1(), "rule__AttributeSize__PrecisionAssignment_2_1");
			builder.put(grammarAccess.getArraySizeAccess().getSizeAssignment_1(), "rule__ArraySize__SizeAssignment_1");
			builder.put(grammarAccess.getRelationshipAccess().getRelDescLinesAssignment_0(), "rule__Relationship__RelDescLinesAssignment_0");
			builder.put(grammarAccess.getRelationshipAccess().getCardi1Assignment_1(), "rule__Relationship__Cardi1Assignment_1");
			builder.put(grammarAccess.getRelationshipAccess().getNameAssignment_2(), "rule__Relationship__NameAssignment_2");
			builder.put(grammarAccess.getRelationshipAccess().getCardi2Assignment_3(), "rule__Relationship__Cardi2Assignment_3");
			builder.put(grammarAccess.getRelationshipAccess().getLinkToAssignment_4(), "rule__Relationship__LinkToAssignment_4");
			builder.put(grammarAccess.getRelationshipAccess().getRelDescAssignment_5(), "rule__Relationship__RelDescAssignment_5");
			builder.put(grammarAccess.getConstraintAccess().getChkDescLinesAssignment_0(), "rule__Constraint__ChkDescLinesAssignment_0");
			builder.put(grammarAccess.getConstraintAccess().getNameAssignment_1(), "rule__Constraint__NameAssignment_1");
			builder.put(grammarAccess.getConstraintAccess().getFirstEntityAssignment_2_1(), "rule__Constraint__FirstEntityAssignment_2_1");
			builder.put(grammarAccess.getConstraintAccess().getEntitiesListAssignment_2_2(), "rule__Constraint__EntitiesListAssignment_2_2");
			builder.put(grammarAccess.getConstraintAccess().getCheckAssignment_5(), "rule__Constraint__CheckAssignment_5");
			builder.put(grammarAccess.getEntitiesListEltAccess().getEntityAssignment_1(), "rule__EntitiesListElt__EntityAssignment_1");
			builder.put(grammarAccess.getEntitiesListEltAccess().getIsArrayAssignment_2(), "rule__EntitiesListElt__IsArrayAssignment_2");
			builder.put(grammarAccess.getCheckExpressionAccess().getChkDescAssignment_0(), "rule__CheckExpression__ChkDescAssignment_0");
			builder.put(grammarAccess.getCheckExpressionAccess().getNameAssignment_1(), "rule__CheckExpression__NameAssignment_1");
			builder.put(grammarAccess.getCheckExpressionAccess().getExprAssignment_2(), "rule__CheckExpression__ExprAssignment_2");
			builder.put(grammarAccess.getBinaryExpressionAccess().getLeftAssignment_0_0_1(), "rule__BinaryExpression__LeftAssignment_0_0_1");
			builder.put(grammarAccess.getBinaryExpressionAccess().getOpAssignment_0_0_2(), "rule__BinaryExpression__OpAssignment_0_0_2");
			builder.put(grammarAccess.getBinaryExpressionAccess().getRightAssignment_0_0_3(), "rule__BinaryExpression__RightAssignment_0_0_3");
			builder.put(grammarAccess.getBinaryExpressionAccess().getLeftAssignment_0_1_1(), "rule__BinaryExpression__LeftAssignment_0_1_1");
			builder.put(grammarAccess.getBinaryExpressionAccess().getOpAssignment_0_1_2(), "rule__BinaryExpression__OpAssignment_0_1_2");
			builder.put(grammarAccess.getBinaryExpressionAccess().getRightAssignment_0_1_3(), "rule__BinaryExpression__RightAssignment_0_1_3");
			builder.put(grammarAccess.getBinaryExpressionAccess().getLeftAssignment_0_2_1(), "rule__BinaryExpression__LeftAssignment_0_2_1");
			builder.put(grammarAccess.getBinaryExpressionAccess().getOpAssignment_0_2_2(), "rule__BinaryExpression__OpAssignment_0_2_2");
			builder.put(grammarAccess.getBinaryExpressionAccess().getRightAssignment_0_2_3(), "rule__BinaryExpression__RightAssignment_0_2_3");
			builder.put(grammarAccess.getBinaryExpressionAccess().getExprValueAssignment_1_0(), "rule__BinaryExpression__ExprValueAssignment_1_0");
			builder.put(grammarAccess.getBinaryExpressionAccess().getPrecisionAssignment_1_1(), "rule__BinaryExpression__PrecisionAssignment_1_1");
			builder.put(grammarAccess.getBinaryExpressionAccess().getLengthAssignment_1_2(), "rule__BinaryExpression__LengthAssignment_1_2");
			builder.put(grammarAccess.getBinaryExpressionAccess().getHasAttributeAssignment_1_3(), "rule__BinaryExpression__HasAttributeAssignment_1_3");
			builder.put(grammarAccess.getUnaryExpressionAccess().getOpAssignment_0_0_0(), "rule__UnaryExpression__OpAssignment_0_0_0");
			builder.put(grammarAccess.getUnaryExpressionAccess().getLeftAssignment_0_0_2(), "rule__UnaryExpression__LeftAssignment_0_0_2");
			builder.put(grammarAccess.getUnaryExpressionAccess().getOpAssignment_0_1_0(), "rule__UnaryExpression__OpAssignment_0_1_0");
			builder.put(grammarAccess.getUnaryExpressionAccess().getLeftAssignment_0_1_2(), "rule__UnaryExpression__LeftAssignment_0_1_2");
			builder.put(grammarAccess.getUnaryExpressionAccess().getOpAssignment_0_2_0(), "rule__UnaryExpression__OpAssignment_0_2_0");
			builder.put(grammarAccess.getUnaryExpressionAccess().getLeftAssignment_0_2_2(), "rule__UnaryExpression__LeftAssignment_0_2_2");
			builder.put(grammarAccess.getUnaryExpressionAccess().getExprValueAssignment_1_0(), "rule__UnaryExpression__ExprValueAssignment_1_0");
			builder.put(grammarAccess.getUnaryExpressionAccess().getPrecisionAssignment_1_1(), "rule__UnaryExpression__PrecisionAssignment_1_1");
			builder.put(grammarAccess.getUnaryExpressionAccess().getLengthAssignment_1_2(), "rule__UnaryExpression__LengthAssignment_1_2");
			builder.put(grammarAccess.getUnaryExpressionAccess().getHasAttributeAssignment_1_3(), "rule__UnaryExpression__HasAttributeAssignment_1_3");
			builder.put(grammarAccess.getAddExpressionAccess().getLeftAssignment_0_0_1(), "rule__AddExpression__LeftAssignment_0_0_1");
			builder.put(grammarAccess.getAddExpressionAccess().getOpAssignment_0_0_2(), "rule__AddExpression__OpAssignment_0_0_2");
			builder.put(grammarAccess.getAddExpressionAccess().getRightAssignment_0_0_3(), "rule__AddExpression__RightAssignment_0_0_3");
			builder.put(grammarAccess.getAddExpressionAccess().getAddEltsAssignment_0_0_4(), "rule__AddExpression__AddEltsAssignment_0_0_4");
			builder.put(grammarAccess.getAddExpressionAccess().getLeftAssignment_0_1_1(), "rule__AddExpression__LeftAssignment_0_1_1");
			builder.put(grammarAccess.getAddExpressionAccess().getOpAssignment_0_1_2(), "rule__AddExpression__OpAssignment_0_1_2");
			builder.put(grammarAccess.getAddExpressionAccess().getRightAssignment_0_1_3(), "rule__AddExpression__RightAssignment_0_1_3");
			builder.put(grammarAccess.getAddExpressionAccess().getAddEltsAssignment_0_1_4(), "rule__AddExpression__AddEltsAssignment_0_1_4");
			builder.put(grammarAccess.getAddExpressionAccess().getLeftAssignment_0_2_1(), "rule__AddExpression__LeftAssignment_0_2_1");
			builder.put(grammarAccess.getAddExpressionAccess().getOpAssignment_0_2_2(), "rule__AddExpression__OpAssignment_0_2_2");
			builder.put(grammarAccess.getAddExpressionAccess().getRightAssignment_0_2_3(), "rule__AddExpression__RightAssignment_0_2_3");
			builder.put(grammarAccess.getAddExpressionAccess().getAddEltsAssignment_0_2_4(), "rule__AddExpression__AddEltsAssignment_0_2_4");
			builder.put(grammarAccess.getAddExpressionAccess().getExprValueAssignment_1_0(), "rule__AddExpression__ExprValueAssignment_1_0");
			builder.put(grammarAccess.getAddExpressionAccess().getPrecisionAssignment_1_1(), "rule__AddExpression__PrecisionAssignment_1_1");
			builder.put(grammarAccess.getAddExpressionAccess().getLengthAssignment_1_2(), "rule__AddExpression__LengthAssignment_1_2");
			builder.put(grammarAccess.getAddExpressionAccess().getHasAttributeAssignment_1_3(), "rule__AddExpression__HasAttributeAssignment_1_3");
			builder.put(grammarAccess.getAddExpressionEltAccess().getOpAssignment_0(), "rule__AddExpressionElt__OpAssignment_0");
			builder.put(grammarAccess.getAddExpressionEltAccess().getRightAssignment_1(), "rule__AddExpressionElt__RightAssignment_1");
			builder.put(grammarAccess.getMultExpressionAccess().getLeftAssignment_0_0_1(), "rule__MultExpression__LeftAssignment_0_0_1");
			builder.put(grammarAccess.getMultExpressionAccess().getOpAssignment_0_0_2(), "rule__MultExpression__OpAssignment_0_0_2");
			builder.put(grammarAccess.getMultExpressionAccess().getRightAssignment_0_0_3(), "rule__MultExpression__RightAssignment_0_0_3");
			builder.put(grammarAccess.getMultExpressionAccess().getMultEltsAssignment_0_0_4(), "rule__MultExpression__MultEltsAssignment_0_0_4");
			builder.put(grammarAccess.getMultExpressionAccess().getLeftAssignment_0_1_1(), "rule__MultExpression__LeftAssignment_0_1_1");
			builder.put(grammarAccess.getMultExpressionAccess().getOpAssignment_0_1_2(), "rule__MultExpression__OpAssignment_0_1_2");
			builder.put(grammarAccess.getMultExpressionAccess().getRightAssignment_0_1_3(), "rule__MultExpression__RightAssignment_0_1_3");
			builder.put(grammarAccess.getMultExpressionAccess().getMultEltsAssignment_0_1_4(), "rule__MultExpression__MultEltsAssignment_0_1_4");
			builder.put(grammarAccess.getMultExpressionAccess().getLeftAssignment_0_2_1(), "rule__MultExpression__LeftAssignment_0_2_1");
			builder.put(grammarAccess.getMultExpressionAccess().getOpAssignment_0_2_2(), "rule__MultExpression__OpAssignment_0_2_2");
			builder.put(grammarAccess.getMultExpressionAccess().getRightAssignment_0_2_3(), "rule__MultExpression__RightAssignment_0_2_3");
			builder.put(grammarAccess.getMultExpressionAccess().getMultEltsAssignment_0_2_4(), "rule__MultExpression__MultEltsAssignment_0_2_4");
			builder.put(grammarAccess.getMultExpressionAccess().getExprValueAssignment_1_0(), "rule__MultExpression__ExprValueAssignment_1_0");
			builder.put(grammarAccess.getMultExpressionAccess().getPrecisionAssignment_1_1(), "rule__MultExpression__PrecisionAssignment_1_1");
			builder.put(grammarAccess.getMultExpressionAccess().getLengthAssignment_1_2(), "rule__MultExpression__LengthAssignment_1_2");
			builder.put(grammarAccess.getMultExpressionAccess().getHasAttributeAssignment_1_3(), "rule__MultExpression__HasAttributeAssignment_1_3");
			builder.put(grammarAccess.getMultExpressionEltAccess().getOpAssignment_0(), "rule__MultExpressionElt__OpAssignment_0");
			builder.put(grammarAccess.getMultExpressionEltAccess().getRightAssignment_1(), "rule__MultExpressionElt__RightAssignment_1");
			builder.put(grammarAccess.getAndExpressionAccess().getLeftAssignment_0_0_1(), "rule__AndExpression__LeftAssignment_0_0_1");
			builder.put(grammarAccess.getAndExpressionAccess().getOpAssignment_0_0_2(), "rule__AndExpression__OpAssignment_0_0_2");
			builder.put(grammarAccess.getAndExpressionAccess().getRightAssignment_0_0_3(), "rule__AndExpression__RightAssignment_0_0_3");
			builder.put(grammarAccess.getAndExpressionAccess().getAndEltsAssignment_0_0_4(), "rule__AndExpression__AndEltsAssignment_0_0_4");
			builder.put(grammarAccess.getAndExpressionAccess().getLeftAssignment_0_1_1(), "rule__AndExpression__LeftAssignment_0_1_1");
			builder.put(grammarAccess.getAndExpressionAccess().getOpAssignment_0_1_2(), "rule__AndExpression__OpAssignment_0_1_2");
			builder.put(grammarAccess.getAndExpressionAccess().getRightAssignment_0_1_3(), "rule__AndExpression__RightAssignment_0_1_3");
			builder.put(grammarAccess.getAndExpressionAccess().getAndEltsAssignment_0_1_4(), "rule__AndExpression__AndEltsAssignment_0_1_4");
			builder.put(grammarAccess.getAndExpressionAccess().getLeftAssignment_0_2_1(), "rule__AndExpression__LeftAssignment_0_2_1");
			builder.put(grammarAccess.getAndExpressionAccess().getOpAssignment_0_2_2(), "rule__AndExpression__OpAssignment_0_2_2");
			builder.put(grammarAccess.getAndExpressionAccess().getRightAssignment_0_2_3(), "rule__AndExpression__RightAssignment_0_2_3");
			builder.put(grammarAccess.getAndExpressionAccess().getAndEltsAssignment_0_2_4(), "rule__AndExpression__AndEltsAssignment_0_2_4");
			builder.put(grammarAccess.getAndExpressionAccess().getExprValueAssignment_1_0(), "rule__AndExpression__ExprValueAssignment_1_0");
			builder.put(grammarAccess.getAndExpressionAccess().getHasAttributeAssignment_1_1(), "rule__AndExpression__HasAttributeAssignment_1_1");
			builder.put(grammarAccess.getAndExpressionEltAccess().getOpAssignment_0(), "rule__AndExpressionElt__OpAssignment_0");
			builder.put(grammarAccess.getAndExpressionEltAccess().getRightAssignment_1(), "rule__AndExpressionElt__RightAssignment_1");
			builder.put(grammarAccess.getOrExpressionAccess().getLeftAssignment_0_0_1(), "rule__OrExpression__LeftAssignment_0_0_1");
			builder.put(grammarAccess.getOrExpressionAccess().getOpAssignment_0_0_2(), "rule__OrExpression__OpAssignment_0_0_2");
			builder.put(grammarAccess.getOrExpressionAccess().getRightAssignment_0_0_3(), "rule__OrExpression__RightAssignment_0_0_3");
			builder.put(grammarAccess.getOrExpressionAccess().getOrEltsAssignment_0_0_4(), "rule__OrExpression__OrEltsAssignment_0_0_4");
			builder.put(grammarAccess.getOrExpressionAccess().getLeftAssignment_0_1_1(), "rule__OrExpression__LeftAssignment_0_1_1");
			builder.put(grammarAccess.getOrExpressionAccess().getOpAssignment_0_1_2(), "rule__OrExpression__OpAssignment_0_1_2");
			builder.put(grammarAccess.getOrExpressionAccess().getRightAssignment_0_1_3(), "rule__OrExpression__RightAssignment_0_1_3");
			builder.put(grammarAccess.getOrExpressionAccess().getOrEltsAssignment_0_1_4(), "rule__OrExpression__OrEltsAssignment_0_1_4");
			builder.put(grammarAccess.getOrExpressionAccess().getLeftAssignment_0_2_1(), "rule__OrExpression__LeftAssignment_0_2_1");
			builder.put(grammarAccess.getOrExpressionAccess().getOpAssignment_0_2_2(), "rule__OrExpression__OpAssignment_0_2_2");
			builder.put(grammarAccess.getOrExpressionAccess().getRightAssignment_0_2_3(), "rule__OrExpression__RightAssignment_0_2_3");
			builder.put(grammarAccess.getOrExpressionAccess().getOrEltsAssignment_0_2_4(), "rule__OrExpression__OrEltsAssignment_0_2_4");
			builder.put(grammarAccess.getOrExpressionAccess().getExprValueAssignment_1_0(), "rule__OrExpression__ExprValueAssignment_1_0");
			builder.put(grammarAccess.getOrExpressionAccess().getHasAttributeAssignment_1_1(), "rule__OrExpression__HasAttributeAssignment_1_1");
			builder.put(grammarAccess.getOrExpressionEltAccess().getOpAssignment_0(), "rule__OrExpressionElt__OpAssignment_0");
			builder.put(grammarAccess.getOrExpressionEltAccess().getRightAssignment_1(), "rule__OrExpressionElt__RightAssignment_1");
			builder.put(grammarAccess.getCatExpressionAccess().getLeftAssignment_0_0_1(), "rule__CatExpression__LeftAssignment_0_0_1");
			builder.put(grammarAccess.getCatExpressionAccess().getOpAssignment_0_0_2(), "rule__CatExpression__OpAssignment_0_0_2");
			builder.put(grammarAccess.getCatExpressionAccess().getRightAssignment_0_0_3(), "rule__CatExpression__RightAssignment_0_0_3");
			builder.put(grammarAccess.getCatExpressionAccess().getCatEltsAssignment_0_0_4(), "rule__CatExpression__CatEltsAssignment_0_0_4");
			builder.put(grammarAccess.getCatExpressionAccess().getLeftAssignment_0_1_1(), "rule__CatExpression__LeftAssignment_0_1_1");
			builder.put(grammarAccess.getCatExpressionAccess().getOpAssignment_0_1_2(), "rule__CatExpression__OpAssignment_0_1_2");
			builder.put(grammarAccess.getCatExpressionAccess().getRightAssignment_0_1_3(), "rule__CatExpression__RightAssignment_0_1_3");
			builder.put(grammarAccess.getCatExpressionAccess().getCatEltsAssignment_0_1_4(), "rule__CatExpression__CatEltsAssignment_0_1_4");
			builder.put(grammarAccess.getCatExpressionAccess().getLeftAssignment_0_2_1(), "rule__CatExpression__LeftAssignment_0_2_1");
			builder.put(grammarAccess.getCatExpressionAccess().getOpAssignment_0_2_2(), "rule__CatExpression__OpAssignment_0_2_2");
			builder.put(grammarAccess.getCatExpressionAccess().getRightAssignment_0_2_3(), "rule__CatExpression__RightAssignment_0_2_3");
			builder.put(grammarAccess.getCatExpressionAccess().getCatEltsAssignment_0_2_4(), "rule__CatExpression__CatEltsAssignment_0_2_4");
			builder.put(grammarAccess.getCatExpressionAccess().getExprValueAssignment_1_0(), "rule__CatExpression__ExprValueAssignment_1_0");
			builder.put(grammarAccess.getCatExpressionAccess().getLengthAssignment_1_1(), "rule__CatExpression__LengthAssignment_1_1");
			builder.put(grammarAccess.getCatExpressionAccess().getHasAttributeAssignment_1_2(), "rule__CatExpression__HasAttributeAssignment_1_2");
			builder.put(grammarAccess.getCatExpressionEltAccess().getOpAssignment_0(), "rule__CatExpressionElt__OpAssignment_0");
			builder.put(grammarAccess.getCatExpressionEltAccess().getRightAssignment_1(), "rule__CatExpressionElt__RightAssignment_1");
			builder.put(grammarAccess.getListExpressionAccess().getOpAssignment_0(), "rule__ListExpression__OpAssignment_0");
			builder.put(grammarAccess.getListExpressionAccess().getLeftAssignment_1(), "rule__ListExpression__LeftAssignment_1");
			builder.put(grammarAccess.getListExpressionAccess().getListEltsAssignment_2(), "rule__ListExpression__ListEltsAssignment_2");
			builder.put(grammarAccess.getListExpressionAccess().getExprValueAssignment_4_0(), "rule__ListExpression__ExprValueAssignment_4_0");
			builder.put(grammarAccess.getListExpressionAccess().getHasAttributeAssignment_4_1(), "rule__ListExpression__HasAttributeAssignment_4_1");
			builder.put(grammarAccess.getListExpressionEltAccess().getOpAssignment_0(), "rule__ListExpressionElt__OpAssignment_0");
			builder.put(grammarAccess.getListExpressionEltAccess().getRightAssignment_1(), "rule__ListExpressionElt__RightAssignment_1");
			builder.put(grammarAccess.getRangeExpressionAccess().getRangeAssignment_0_2(), "rule__RangeExpression__RangeAssignment_0_2");
			builder.put(grammarAccess.getRangeExpressionAccess().getRangeAssignment_1_2(), "rule__RangeExpression__RangeAssignment_1_2");
			builder.put(grammarAccess.getTerminalExpressionAccess().getValueAssignment_0_0_1(), "rule__TerminalExpression__ValueAssignment_0_0_1");
			builder.put(grammarAccess.getTerminalExpressionAccess().getValueAssignment_0_1_1(), "rule__TerminalExpression__ValueAssignment_0_1_1");
			builder.put(grammarAccess.getTerminalExpressionAccess().getValueAssignment_0_2_1(), "rule__TerminalExpression__ValueAssignment_0_2_1");
			builder.put(grammarAccess.getTerminalExpressionAccess().getValueAssignment_0_3_1(), "rule__TerminalExpression__ValueAssignment_0_3_1");
			builder.put(grammarAccess.getTerminalExpressionAccess().getValueAssignment_0_4_1(), "rule__TerminalExpression__ValueAssignment_0_4_1");
			builder.put(grammarAccess.getTerminalExpressionAccess().getIndexAssignment_0_4_2(), "rule__TerminalExpression__IndexAssignment_0_4_2");
			builder.put(grammarAccess.getTerminalExpressionAccess().getValueAssignment_0_5_1(), "rule__TerminalExpression__ValueAssignment_0_5_1");
			builder.put(grammarAccess.getTerminalExpressionAccess().getValueAssignment_0_6_1(), "rule__TerminalExpression__ValueAssignment_0_6_1");
			builder.put(grammarAccess.getTerminalExpressionAccess().getValueAssignment_0_7_1(), "rule__TerminalExpression__ValueAssignment_0_7_1");
			builder.put(grammarAccess.getTerminalExpressionAccess().getIndexAssignment_0_7_2(), "rule__TerminalExpression__IndexAssignment_0_7_2");
			builder.put(grammarAccess.getTerminalExpressionAccess().getExprValueAssignment_1_0(), "rule__TerminalExpression__ExprValueAssignment_1_0");
			builder.put(grammarAccess.getTerminalExpressionAccess().getHasAttributeAssignment_1_1(), "rule__TerminalExpression__HasAttributeAssignment_1_1");
			builder.put(grammarAccess.getLineCommentAccess().getLineAssignment_1(), "rule__LineComment__LineAssignment_1");
			builder.put(grammarAccess.getTrailCommentAccess().getLineAssignment_1(), "rule__TrailComment__LineAssignment_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private DdGrammarAccess grammarAccess;

	@Override
	protected InternalDdParser createParser() {
		InternalDdParser result = new InternalDdParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected TokenSource createLexer(CharStream stream) {
		return new DdTokenSource(super.createLexer(stream));
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_CONT", "RULE_IDENT" };
	}

	public DdGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(DdGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
