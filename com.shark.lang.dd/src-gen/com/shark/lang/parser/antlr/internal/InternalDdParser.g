/*
 * generated by Xtext 2.23.0
 */
parser grammar InternalDdParser;

options {
	tokenVocab=InternalDdLexer;
	superClass=AbstractInternalAntlrParser;
}

@header {
package com.shark.lang.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.shark.lang.services.DdGrammarAccess;

}

@members {

 	private DdGrammarAccess grammarAccess;

    public InternalDdParser(TokenStream input, DdGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "DataModelFragment";
   	}

   	@Override
   	protected DdGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleDataModelFragment
entryRuleDataModelFragment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataModelFragmentRule()); }
	iv_ruleDataModelFragment=ruleDataModelFragment
	{ $current=$iv_ruleDataModelFragment.current; }
	EOF;

// Rule DataModelFragment
ruleDataModelFragment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDataModelFragmentAccess().getModelDescLineCommentParserRuleCall_0_0());
				}
				lv_modelDesc_0_0=ruleLineComment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataModelFragmentRule());
					}
					add(
						$current,
						"modelDesc",
						lv_modelDesc_0_0,
						"com.shark.lang.Dd.LineComment");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_1=Model
		{
			newLeafNode(otherlv_1, grammarAccess.getDataModelFragmentAccess().getModelKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_OBJID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getDataModelFragmentAccess().getNameOBJIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataModelFragmentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"com.shark.lang.Dd.OBJID");
				}
			)
		)
		this_EOL_3=RULE_EOL
		{
			newLeafNode(this_EOL_3, grammarAccess.getDataModelFragmentAccess().getEOLTerminalRuleCall_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataModelFragmentAccess().getConstantsConstantParserRuleCall_4_0());
				}
				lv_constants_4_0=ruleConstant
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataModelFragmentRule());
					}
					add(
						$current,
						"constants",
						lv_constants_4_0,
						"com.shark.lang.Dd.Constant");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getDataModelFragmentAccess().getEntitiesEntityParserRuleCall_5_0());
				}
				lv_entities_5_0=ruleEntity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataModelFragmentRule());
					}
					add(
						$current,
						"entities",
						lv_entities_5_0,
						"com.shark.lang.Dd.Entity");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getDataModelFragmentAccess().getConstraintsConstraintParserRuleCall_6_0());
				}
				lv_constraints_6_0=ruleConstraint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataModelFragmentRule());
					}
					add(
						$current,
						"constraints",
						lv_constraints_6_0,
						"com.shark.lang.Dd.Constraint");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleConstant
entryRuleConstant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstantRule()); }
	iv_ruleConstant=ruleConstant
	{ $current=$iv_ruleConstant.current; }
	EOF;

// Rule Constant
ruleConstant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getConstantAccess().getExtraAttrDescLineCommentParserRuleCall_0_0());
				}
				lv_extraAttrDesc_0_0=ruleLineComment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstantRule());
					}
					add(
						$current,
						"extraAttrDesc",
						lv_extraAttrDesc_0_0,
						"com.shark.lang.Dd.LineComment");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getConstantAccess().getDataTypeDataTypeEnumRuleCall_1_0());
				}
				lv_dataType_1_0=ruleDataType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstantRule());
					}
					set(
						$current,
						"dataType",
						lv_dataType_1_0,
						"com.shark.lang.Dd.DataType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConstantAccess().getAttributeSizeAttributeSizeParserRuleCall_2_0());
				}
				lv_attributeSize_2_0=ruleAttributeSize
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstantRule());
					}
					set(
						$current,
						"attributeSize",
						lv_attributeSize_2_0,
						"com.shark.lang.Dd.AttributeSize");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getConstantAccess().getArraySizeArraySizeParserRuleCall_3_0());
				}
				lv_arraySize_3_0=ruleArraySize
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstantRule());
					}
					set(
						$current,
						"arraySize",
						lv_arraySize_3_0,
						"com.shark.lang.Dd.ArraySize");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_name_4_0=RULE_CSTID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getConstantAccess().getNameCSTIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConstantRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"com.shark.lang.Dd.CSTID");
				}
			)
		)
		(
			otherlv_5=EqualsSign
			{
				newLeafNode(otherlv_5, grammarAccess.getConstantAccess().getEqualsSignKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConstantAccess().getDefaultValueSharkExpressionParserRuleCall_5_1_0());
					}
					lv_defaultValue_6_0=ruleSharkExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstantRule());
						}
						set(
							$current,
							"defaultValue",
							lv_defaultValue_6_0,
							"com.shark.lang.Dd.SharkExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConstantAccess().getAttrDescTrailCommentParserRuleCall_6_0());
				}
				lv_attrDesc_7_0=ruleTrailComment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstantRule());
					}
					set(
						$current,
						"attrDesc",
						lv_attrDesc_7_0,
						"com.shark.lang.Dd.TrailComment");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_EOL_8=RULE_EOL
		{
			newLeafNode(this_EOL_8, grammarAccess.getConstantAccess().getEOLTerminalRuleCall_7());
		}
	)
;

// Entry rule entryRuleEntity
entryRuleEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityRule()); }
	iv_ruleEntity=ruleEntity
	{ $current=$iv_ruleEntity.current; }
	EOF;

// Rule Entity
ruleEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getEntityAccess().getEntityDescLinesLineCommentParserRuleCall_0_0());
				}
				lv_entityDescLines_0_0=ruleLineComment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntityRule());
					}
					add(
						$current,
						"entityDescLines",
						lv_entityDescLines_0_0,
						"com.shark.lang.Dd.LineComment");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				lv_name_1_0=RULE_OBJID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEntityAccess().getNameOBJIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntityRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"com.shark.lang.Dd.OBJID");
				}
			)
		)
		(
			otherlv_2=HyphenMinusGreaterThanSign
			{
				newLeafNode(otherlv_2, grammarAccess.getEntityAccess().getHyphenMinusGreaterThanSignKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEntityRule());
						}
					}
					otherlv_3=RULE_ID
					{
						newLeafNode(otherlv_3, grammarAccess.getEntityAccess().getExtendsEntityCrossReference_2_1_0());
					}
				)
			)
		)?
		otherlv_4=Colon
		{
			newLeafNode(otherlv_4, grammarAccess.getEntityAccess().getColonKeyword_3());
		}
		this_BEGIN_5=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_5, grammarAccess.getEntityAccess().getBEGINTerminalRuleCall_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEntityAccess().getAttributesAttributeParserRuleCall_5_0());
				}
				lv_attributes_6_0=ruleAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntityRule());
					}
					add(
						$current,
						"attributes",
						lv_attributes_6_0,
						"com.shark.lang.Dd.Attribute");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getEntityAccess().getRelationshipsRelationshipParserRuleCall_6_0());
				}
				lv_relationships_7_0=ruleRelationship
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntityRule());
					}
					add(
						$current,
						"relationships",
						lv_relationships_7_0,
						"com.shark.lang.Dd.Relationship");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		this_END_8=RULE_END
		{
			newLeafNode(this_END_8, grammarAccess.getEntityAccess().getENDTerminalRuleCall_7());
		}
	)
;

// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	iv_ruleAttribute=ruleAttribute
	{ $current=$iv_ruleAttribute.current; }
	EOF;

// Rule Attribute
ruleAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeAccess().getExtraAttrDescLineCommentParserRuleCall_0_0());
				}
				lv_extraAttrDesc_0_0=ruleLineComment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeRule());
					}
					add(
						$current,
						"extraAttrDesc",
						lv_extraAttrDesc_0_0,
						"com.shark.lang.Dd.LineComment");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeAccess().getDataTypeDataTypeEnumRuleCall_1_0());
				}
				lv_dataType_1_0=ruleDataType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeRule());
					}
					set(
						$current,
						"dataType",
						lv_dataType_1_0,
						"com.shark.lang.Dd.DataType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeAccess().getAttributeSizeAttributeSizeParserRuleCall_2_0());
				}
				lv_attributeSize_2_0=ruleAttributeSize
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeRule());
					}
					set(
						$current,
						"attributeSize",
						lv_attributeSize_2_0,
						"com.shark.lang.Dd.AttributeSize");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeAccess().getArraySizeArraySizeParserRuleCall_3_0());
				}
				lv_arraySize_3_0=ruleArraySize
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeRule());
					}
					set(
						$current,
						"arraySize",
						lv_arraySize_3_0,
						"com.shark.lang.Dd.ArraySize");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"com.shark.lang.Dd.ID");
				}
			)
		)
		(
			otherlv_5=EqualsSign
			{
				newLeafNode(otherlv_5, grammarAccess.getAttributeAccess().getEqualsSignKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAttributeAccess().getDefaultValueSharkExpressionParserRuleCall_5_1_0());
					}
					lv_defaultValue_6_0=ruleSharkExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAttributeRule());
						}
						set(
							$current,
							"defaultValue",
							lv_defaultValue_6_0,
							"com.shark.lang.Dd.SharkExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				lv_primaryKey_7_0=Key
				{
					newLeafNode(lv_primaryKey_7_0, grammarAccess.getAttributeAccess().getPrimaryKeyKeyKeyword_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeRule());
					}
					setWithLastConsumed($current, "primaryKey", lv_primaryKey_7_0 != null, "key");
				}
			)
		)?
		(
			(
				lv_partitionKey_8_0=Partitionkey
				{
					newLeafNode(lv_partitionKey_8_0, grammarAccess.getAttributeAccess().getPartitionKeyPartitionkeyKeyword_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeRule());
					}
					setWithLastConsumed($current, "partitionKey", lv_partitionKey_8_0 != null, "partitionkey");
				}
			)
		)?
		(
			(
				lv_mandatory_9_0=ExclamationMark
				{
					newLeafNode(lv_mandatory_9_0, grammarAccess.getAttributeAccess().getMandatoryExclamationMarkKeyword_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeRule());
					}
					setWithLastConsumed($current, "mandatory", lv_mandatory_9_0 != null, "!");
				}
			)
		)?
		(
			(
				lv_deprecated_10_0=Deprecated
				{
					newLeafNode(lv_deprecated_10_0, grammarAccess.getAttributeAccess().getDeprecatedDeprecatedKeyword_9_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeRule());
					}
					setWithLastConsumed($current, "deprecated", lv_deprecated_10_0 != null, "deprecated");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeAccess().getAttrDescTrailCommentParserRuleCall_10_0());
				}
				lv_attrDesc_11_0=ruleTrailComment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeRule());
					}
					set(
						$current,
						"attrDesc",
						lv_attrDesc_11_0,
						"com.shark.lang.Dd.TrailComment");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_EOL_12=RULE_EOL
		{
			newLeafNode(this_EOL_12, grammarAccess.getAttributeAccess().getEOLTerminalRuleCall_11());
		}
	)
;

// Entry rule entryRuleAttributeSize
entryRuleAttributeSize returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeSizeRule()); }
	iv_ruleAttributeSize=ruleAttributeSize
	{ $current=$iv_ruleAttributeSize.current; }
	EOF;

// Rule AttributeSize
ruleAttributeSize returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=LeftParenthesis
		{
			newLeafNode(otherlv_0, grammarAccess.getAttributeSizeAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				lv_length_1_0=RULE_INT
				{
					newLeafNode(lv_length_1_0, grammarAccess.getAttributeSizeAccess().getLengthINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeSizeRule());
					}
					setWithLastConsumed(
						$current,
						"length",
						lv_length_1_0,
						"com.shark.lang.Dd.INT");
				}
			)
		)
		(
			otherlv_2=Comma
			{
				newLeafNode(otherlv_2, grammarAccess.getAttributeSizeAccess().getCommaKeyword_2_0());
			}
			(
				(
					lv_precision_3_0=RULE_INT
					{
						newLeafNode(lv_precision_3_0, grammarAccess.getAttributeSizeAccess().getPrecisionINTTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAttributeSizeRule());
						}
						setWithLastConsumed(
							$current,
							"precision",
							lv_precision_3_0,
							"com.shark.lang.Dd.INT");
					}
				)
			)
		)?
		otherlv_4=RightParenthesis
		{
			newLeafNode(otherlv_4, grammarAccess.getAttributeSizeAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleArraySize
entryRuleArraySize returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArraySizeRule()); }
	iv_ruleArraySize=ruleArraySize
	{ $current=$iv_ruleArraySize.current; }
	EOF;

// Rule ArraySize
ruleArraySize returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=LeftSquareBracket
		{
			newLeafNode(otherlv_0, grammarAccess.getArraySizeAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				lv_size_1_0=RULE_INT
				{
					newLeafNode(lv_size_1_0, grammarAccess.getArraySizeAccess().getSizeINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getArraySizeRule());
					}
					setWithLastConsumed(
						$current,
						"size",
						lv_size_1_0,
						"com.shark.lang.Dd.INT");
				}
			)
		)
		otherlv_2=RightSquareBracket
		{
			newLeafNode(otherlv_2, grammarAccess.getArraySizeAccess().getRightSquareBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleRelationship
entryRuleRelationship returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationshipRule()); }
	iv_ruleRelationship=ruleRelationship
	{ $current=$iv_ruleRelationship.current; }
	EOF;

// Rule Relationship
ruleRelationship returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getRelationshipAccess().getRelDescLinesLineCommentParserRuleCall_0_0());
				}
				lv_relDescLines_0_0=ruleLineComment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelationshipRule());
					}
					add(
						$current,
						"relDescLines",
						lv_relDescLines_0_0,
						"com.shark.lang.Dd.LineComment");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getRelationshipAccess().getCardi1RangeExpressionParserRuleCall_1_0());
				}
				lv_cardi1_1_0=ruleRangeExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelationshipRule());
					}
					set(
						$current,
						"cardi1",
						lv_cardi1_1_0,
						"com.shark.lang.Dd.RangeExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getRelationshipAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRelationshipRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"com.shark.lang.Dd.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRelationshipAccess().getCardi2RangeExpressionParserRuleCall_3_0());
				}
				lv_cardi2_3_0=ruleRangeExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelationshipRule());
					}
					set(
						$current,
						"cardi2",
						lv_cardi2_3_0,
						"com.shark.lang.Dd.RangeExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRelationshipRule());
					}
				}
				otherlv_4=RULE_OBJID
				{
					newLeafNode(otherlv_4, grammarAccess.getRelationshipAccess().getLinkToEntityCrossReference_4_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRelationshipAccess().getRelDescTrailCommentParserRuleCall_5_0());
				}
				lv_relDesc_5_0=ruleTrailComment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelationshipRule());
					}
					set(
						$current,
						"relDesc",
						lv_relDesc_5_0,
						"com.shark.lang.Dd.TrailComment");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_EOL_6=RULE_EOL
		{
			newLeafNode(this_EOL_6, grammarAccess.getRelationshipAccess().getEOLTerminalRuleCall_6());
		}
	)
;

// Entry rule entryRuleConstraint
entryRuleConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstraintRule()); }
	iv_ruleConstraint=ruleConstraint
	{ $current=$iv_ruleConstraint.current; }
	EOF;

// Rule Constraint
ruleConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getConstraintAccess().getChkDescLinesLineCommentParserRuleCall_0_0());
				}
				lv_chkDescLines_0_0=ruleLineComment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstraintRule());
					}
					add(
						$current,
						"chkDescLines",
						lv_chkDescLines_0_0,
						"com.shark.lang.Dd.LineComment");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				lv_name_1_0=RULE_CHKID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getConstraintAccess().getNameCHKIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConstraintRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"com.shark.lang.Dd.CHKID");
				}
			)
		)
		(
			otherlv_2=LeftParenthesis
			{
				newLeafNode(otherlv_2, grammarAccess.getConstraintAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConstraintRule());
						}
					}
					otherlv_3=RULE_OBJID
					{
						newLeafNode(otherlv_3, grammarAccess.getConstraintAccess().getFirstEntityEntityCrossReference_2_1_0());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getConstraintAccess().getEntitiesListEntitiesListEltParserRuleCall_2_2_0());
					}
					lv_entitiesList_4_0=ruleEntitiesListElt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstraintRule());
						}
						add(
							$current,
							"entitiesList",
							lv_entitiesList_4_0,
							"com.shark.lang.Dd.EntitiesListElt");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_5=RightParenthesis
			{
				newLeafNode(otherlv_5, grammarAccess.getConstraintAccess().getRightParenthesisKeyword_2_3());
			}
		)?
		otherlv_6=Colon
		{
			newLeafNode(otherlv_6, grammarAccess.getConstraintAccess().getColonKeyword_3());
		}
		this_BEGIN_7=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_7, grammarAccess.getConstraintAccess().getBEGINTerminalRuleCall_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConstraintAccess().getCheckCheckExpressionParserRuleCall_5_0());
				}
				lv_check_8_0=ruleCheckExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstraintRule());
					}
					add(
						$current,
						"check",
						lv_check_8_0,
						"com.shark.lang.Dd.CheckExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		this_END_9=RULE_END
		{
			newLeafNode(this_END_9, grammarAccess.getConstraintAccess().getENDTerminalRuleCall_6());
		}
	)
;

// Entry rule entryRuleEntitiesListElt
entryRuleEntitiesListElt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntitiesListEltRule()); }
	iv_ruleEntitiesListElt=ruleEntitiesListElt
	{ $current=$iv_ruleEntitiesListElt.current; }
	EOF;

// Rule EntitiesListElt
ruleEntitiesListElt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Comma
		{
			newLeafNode(otherlv_0, grammarAccess.getEntitiesListEltAccess().getCommaKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntitiesListEltRule());
					}
				}
				otherlv_1=RULE_OBJID
				{
					newLeafNode(otherlv_1, grammarAccess.getEntitiesListEltAccess().getEntityEntityCrossReference_1_0());
				}
			)
		)
		(
			(
				lv_isArray_2_0=LeftSquareBracketRightSquareBracket
				{
					newLeafNode(lv_isArray_2_0, grammarAccess.getEntitiesListEltAccess().getIsArrayLeftSquareBracketRightSquareBracketKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntitiesListEltRule());
					}
					setWithLastConsumed($current, "isArray", lv_isArray_2_0, "[]");
				}
			)
		)?
	)
;

// Entry rule entryRuleCheckExpression
entryRuleCheckExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCheckExpressionRule()); }
	iv_ruleCheckExpression=ruleCheckExpression
	{ $current=$iv_ruleCheckExpression.current; }
	EOF;

// Rule CheckExpression
ruleCheckExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCheckExpressionAccess().getChkDescLineCommentParserRuleCall_0_0());
				}
				lv_chkDesc_0_0=ruleLineComment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCheckExpressionRule());
					}
					add(
						$current,
						"chkDesc",
						lv_chkDesc_0_0,
						"com.shark.lang.Dd.LineComment");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getCheckExpressionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCheckExpressionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"com.shark.lang.Dd.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCheckExpressionAccess().getExprSharkExpressionParserRuleCall_2_0());
				}
				lv_expr_2_0=ruleSharkExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCheckExpressionRule());
					}
					set(
						$current,
						"expr",
						lv_expr_2_0,
						"com.shark.lang.Dd.SharkExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_EOL_3=RULE_EOL
		{
			newLeafNode(this_EOL_3, grammarAccess.getCheckExpressionAccess().getEOLTerminalRuleCall_3());
		}
	)
;

// Entry rule entryRuleSharkExpression
entryRuleSharkExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSharkExpressionRule()); }
	iv_ruleSharkExpression=ruleSharkExpression
	{ $current=$iv_ruleSharkExpression.current; }
	EOF;

// Rule SharkExpression
ruleSharkExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(ruleRangeExpression)=>
			{
				newCompositeNode(grammarAccess.getSharkExpressionAccess().getRangeExpressionParserRuleCall_0());
			}
			this_RangeExpression_0=ruleRangeExpression
			{
				$current = $this_RangeExpression_0.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			(ruleAddExpression)=>
			{
				newCompositeNode(grammarAccess.getSharkExpressionAccess().getAddExpressionParserRuleCall_1());
			}
			this_AddExpression_1=ruleAddExpression
			{
				$current = $this_AddExpression_1.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			(ruleMultExpression)=>
			{
				newCompositeNode(grammarAccess.getSharkExpressionAccess().getMultExpressionParserRuleCall_2());
			}
			this_MultExpression_2=ruleMultExpression
			{
				$current = $this_MultExpression_2.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			(ruleAndExpression)=>
			{
				newCompositeNode(grammarAccess.getSharkExpressionAccess().getAndExpressionParserRuleCall_3());
			}
			this_AndExpression_3=ruleAndExpression
			{
				$current = $this_AndExpression_3.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			(ruleOrExpression)=>
			{
				newCompositeNode(grammarAccess.getSharkExpressionAccess().getOrExpressionParserRuleCall_4());
			}
			this_OrExpression_4=ruleOrExpression
			{
				$current = $this_OrExpression_4.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			(ruleCatExpression)=>
			{
				newCompositeNode(grammarAccess.getSharkExpressionAccess().getCatExpressionParserRuleCall_5());
			}
			this_CatExpression_5=ruleCatExpression
			{
				$current = $this_CatExpression_5.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			(ruleListExpression)=>
			{
				newCompositeNode(grammarAccess.getSharkExpressionAccess().getListExpressionParserRuleCall_6());
			}
			this_ListExpression_6=ruleListExpression
			{
				$current = $this_ListExpression_6.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getSharkExpressionAccess().getBinaryExpressionParserRuleCall_7());
		}
		this_BinaryExpression_7=ruleBinaryExpression
		{
			$current = $this_BinaryExpression_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSharkExpressionAccess().getUnaryExpressionParserRuleCall_8());
		}
		this_UnaryExpression_8=ruleUnaryExpression
		{
			$current = $this_UnaryExpression_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSharkExpressionAccess().getTerminalExpressionParserRuleCall_9());
		}
		this_TerminalExpression_9=ruleTerminalExpression
		{
			$current = $this_TerminalExpression_9.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBinaryExpression
entryRuleBinaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBinaryExpressionRule()); }
	iv_ruleBinaryExpression=ruleBinaryExpression
	{ $current=$iv_ruleBinaryExpression.current; }
	EOF;

// Rule BinaryExpression
ruleBinaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				otherlv_0=LeftParenthesis
				{
					newLeafNode(otherlv_0, grammarAccess.getBinaryExpressionAccess().getLeftParenthesisKeyword_0_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryExpressionAccess().getLeftSharkExpressionParserRuleCall_0_0_1_0());
						}
						lv_left_1_0=ruleSharkExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryExpressionRule());
							}
							set(
								$current,
								"left",
								lv_left_1_0,
								"com.shark.lang.Dd.SharkExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryExpressionAccess().getOpBinaryOperatorEnumRuleCall_0_0_2_0());
						}
						lv_op_2_0=ruleBinaryOperator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryExpressionRule());
							}
							set(
								$current,
								"op",
								lv_op_2_0,
								"com.shark.lang.Dd.BinaryOperator");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryExpressionAccess().getRightSharkExpressionParserRuleCall_0_0_3_0());
						}
						lv_right_3_0=ruleSharkExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryExpressionRule());
							}
							set(
								$current,
								"right",
								lv_right_3_0,
								"com.shark.lang.Dd.SharkExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_4=RightParenthesis
				{
					newLeafNode(otherlv_4, grammarAccess.getBinaryExpressionAccess().getRightParenthesisKeyword_0_0_4());
				}
			)
			    |
			(
				otherlv_5=LeftSquareBracket
				{
					newLeafNode(otherlv_5, grammarAccess.getBinaryExpressionAccess().getLeftSquareBracketKeyword_0_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryExpressionAccess().getLeftSharkExpressionParserRuleCall_0_1_1_0());
						}
						lv_left_6_0=ruleSharkExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryExpressionRule());
							}
							set(
								$current,
								"left",
								lv_left_6_0,
								"com.shark.lang.Dd.SharkExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryExpressionAccess().getOpBinaryOperatorEnumRuleCall_0_1_2_0());
						}
						lv_op_7_0=ruleBinaryOperator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryExpressionRule());
							}
							set(
								$current,
								"op",
								lv_op_7_0,
								"com.shark.lang.Dd.BinaryOperator");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryExpressionAccess().getRightSharkExpressionParserRuleCall_0_1_3_0());
						}
						lv_right_8_0=ruleSharkExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryExpressionRule());
							}
							set(
								$current,
								"right",
								lv_right_8_0,
								"com.shark.lang.Dd.SharkExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_9=RightSquareBracket
				{
					newLeafNode(otherlv_9, grammarAccess.getBinaryExpressionAccess().getRightSquareBracketKeyword_0_1_4());
				}
			)
			    |
			(
				otherlv_10=LeftCurlyBracket
				{
					newLeafNode(otherlv_10, grammarAccess.getBinaryExpressionAccess().getLeftCurlyBracketKeyword_0_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryExpressionAccess().getLeftSharkExpressionParserRuleCall_0_2_1_0());
						}
						lv_left_11_0=ruleSharkExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryExpressionRule());
							}
							set(
								$current,
								"left",
								lv_left_11_0,
								"com.shark.lang.Dd.SharkExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryExpressionAccess().getOpBinaryOperatorEnumRuleCall_0_2_2_0());
						}
						lv_op_12_0=ruleBinaryOperator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryExpressionRule());
							}
							set(
								$current,
								"op",
								lv_op_12_0,
								"com.shark.lang.Dd.BinaryOperator");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryExpressionAccess().getRightSharkExpressionParserRuleCall_0_2_3_0());
						}
						lv_right_13_0=ruleSharkExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryExpressionRule());
							}
							set(
								$current,
								"right",
								lv_right_13_0,
								"com.shark.lang.Dd.SharkExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_14=RightCurlyBracket
				{
					newLeafNode(otherlv_14, grammarAccess.getBinaryExpressionAccess().getRightCurlyBracketKeyword_0_2_4());
				}
			)
		)
		(
			(
				(
					lv_exprValue_15_0=RULE_NUL
					{
						newLeafNode(lv_exprValue_15_0, grammarAccess.getBinaryExpressionAccess().getExprValueNULTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBinaryExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"exprValue",
							lv_exprValue_15_0,
							"com.shark.lang.Dd.NUL");
					}
				)
			)
			(
				(
					lv_precision_16_0=RULE_INT
					{
						newLeafNode(lv_precision_16_0, grammarAccess.getBinaryExpressionAccess().getPrecisionINTTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBinaryExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"precision",
							lv_precision_16_0,
							"com.shark.lang.Dd.INT");
					}
				)
			)
			(
				(
					lv_length_17_0=RULE_INT
					{
						newLeafNode(lv_length_17_0, grammarAccess.getBinaryExpressionAccess().getLengthINTTerminalRuleCall_1_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBinaryExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"length",
							lv_length_17_0,
							"com.shark.lang.Dd.INT");
					}
				)
			)
			(
				(
					lv_hasAttribute_18_0=RULE_INT
					{
						newLeafNode(lv_hasAttribute_18_0, grammarAccess.getBinaryExpressionAccess().getHasAttributeINTTerminalRuleCall_1_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBinaryExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"hasAttribute",
							lv_hasAttribute_18_0,
							"com.shark.lang.Dd.INT");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnaryExpressionRule()); }
	iv_ruleUnaryExpression=ruleUnaryExpression
	{ $current=$iv_ruleUnaryExpression.current; }
	EOF;

// Rule UnaryExpression
ruleUnaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOpUnaryOperatorEnumRuleCall_0_0_0_0());
						}
						lv_op_0_0=ruleUnaryOperator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
							}
							set(
								$current,
								"op",
								lv_op_0_0,
								"com.shark.lang.Dd.UnaryOperator");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_1=LeftParenthesis
				{
					newLeafNode(otherlv_1, grammarAccess.getUnaryExpressionAccess().getLeftParenthesisKeyword_0_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getUnaryExpressionAccess().getLeftSharkExpressionParserRuleCall_0_0_2_0());
						}
						lv_left_2_0=ruleSharkExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
							}
							set(
								$current,
								"left",
								lv_left_2_0,
								"com.shark.lang.Dd.SharkExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_3=RightParenthesis
				{
					newLeafNode(otherlv_3, grammarAccess.getUnaryExpressionAccess().getRightParenthesisKeyword_0_0_3());
				}
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOpUnaryOperatorEnumRuleCall_0_1_0_0());
						}
						lv_op_4_0=ruleUnaryOperator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
							}
							set(
								$current,
								"op",
								lv_op_4_0,
								"com.shark.lang.Dd.UnaryOperator");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_5=LeftSquareBracket
				{
					newLeafNode(otherlv_5, grammarAccess.getUnaryExpressionAccess().getLeftSquareBracketKeyword_0_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getUnaryExpressionAccess().getLeftSharkExpressionParserRuleCall_0_1_2_0());
						}
						lv_left_6_0=ruleSharkExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
							}
							set(
								$current,
								"left",
								lv_left_6_0,
								"com.shark.lang.Dd.SharkExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_7=RightSquareBracket
				{
					newLeafNode(otherlv_7, grammarAccess.getUnaryExpressionAccess().getRightSquareBracketKeyword_0_1_3());
				}
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOpUnaryOperatorEnumRuleCall_0_2_0_0());
						}
						lv_op_8_0=ruleUnaryOperator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
							}
							set(
								$current,
								"op",
								lv_op_8_0,
								"com.shark.lang.Dd.UnaryOperator");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_9=LeftCurlyBracket
				{
					newLeafNode(otherlv_9, grammarAccess.getUnaryExpressionAccess().getLeftCurlyBracketKeyword_0_2_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getUnaryExpressionAccess().getLeftSharkExpressionParserRuleCall_0_2_2_0());
						}
						lv_left_10_0=ruleSharkExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
							}
							set(
								$current,
								"left",
								lv_left_10_0,
								"com.shark.lang.Dd.SharkExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_11=RightCurlyBracket
				{
					newLeafNode(otherlv_11, grammarAccess.getUnaryExpressionAccess().getRightCurlyBracketKeyword_0_2_3());
				}
			)
		)
		(
			(
				(
					lv_exprValue_12_0=RULE_NUL
					{
						newLeafNode(lv_exprValue_12_0, grammarAccess.getUnaryExpressionAccess().getExprValueNULTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnaryExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"exprValue",
							lv_exprValue_12_0,
							"com.shark.lang.Dd.NUL");
					}
				)
			)
			(
				(
					lv_precision_13_0=RULE_INT
					{
						newLeafNode(lv_precision_13_0, grammarAccess.getUnaryExpressionAccess().getPrecisionINTTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnaryExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"precision",
							lv_precision_13_0,
							"com.shark.lang.Dd.INT");
					}
				)
			)
			(
				(
					lv_length_14_0=RULE_INT
					{
						newLeafNode(lv_length_14_0, grammarAccess.getUnaryExpressionAccess().getLengthINTTerminalRuleCall_1_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnaryExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"length",
							lv_length_14_0,
							"com.shark.lang.Dd.INT");
					}
				)
			)
			(
				(
					lv_hasAttribute_15_0=RULE_INT
					{
						newLeafNode(lv_hasAttribute_15_0, grammarAccess.getUnaryExpressionAccess().getHasAttributeINTTerminalRuleCall_1_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnaryExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"hasAttribute",
							lv_hasAttribute_15_0,
							"com.shark.lang.Dd.INT");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleAddExpression
entryRuleAddExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAddExpressionRule()); }
	iv_ruleAddExpression=ruleAddExpression
	{ $current=$iv_ruleAddExpression.current; }
	EOF;

// Rule AddExpression
ruleAddExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				otherlv_0=LeftParenthesis
				{
					newLeafNode(otherlv_0, grammarAccess.getAddExpressionAccess().getLeftParenthesisKeyword_0_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAddExpressionAccess().getLeftSharkExpressionParserRuleCall_0_0_1_0());
						}
						lv_left_1_0=ruleSharkExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAddExpressionRule());
							}
							set(
								$current,
								"left",
								lv_left_1_0,
								"com.shark.lang.Dd.SharkExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						(
							lv_op_2_1=PlusSign
							{
								newLeafNode(lv_op_2_1, grammarAccess.getAddExpressionAccess().getOpPlusSignKeyword_0_0_2_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getAddExpressionRule());
								}
								setWithLastConsumed($current, "op", lv_op_2_1, null);
							}
							    |
							lv_op_2_2=HyphenMinus
							{
								newLeafNode(lv_op_2_2, grammarAccess.getAddExpressionAccess().getOpHyphenMinusKeyword_0_0_2_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getAddExpressionRule());
								}
								setWithLastConsumed($current, "op", lv_op_2_2, null);
							}
						)
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getAddExpressionAccess().getRightSharkExpressionParserRuleCall_0_0_3_0());
						}
						lv_right_3_0=ruleSharkExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAddExpressionRule());
							}
							set(
								$current,
								"right",
								lv_right_3_0,
								"com.shark.lang.Dd.SharkExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getAddExpressionAccess().getAddEltsAddExpressionEltParserRuleCall_0_0_4_0());
						}
						lv_addElts_4_0=ruleAddExpressionElt
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAddExpressionRule());
							}
							add(
								$current,
								"addElts",
								lv_addElts_4_0,
								"com.shark.lang.Dd.AddExpressionElt");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				otherlv_5=RightParenthesis
				{
					newLeafNode(otherlv_5, grammarAccess.getAddExpressionAccess().getRightParenthesisKeyword_0_0_5());
				}
			)
			    |
			(
				otherlv_6=LeftSquareBracket
				{
					newLeafNode(otherlv_6, grammarAccess.getAddExpressionAccess().getLeftSquareBracketKeyword_0_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAddExpressionAccess().getLeftSharkExpressionParserRuleCall_0_1_1_0());
						}
						lv_left_7_0=ruleSharkExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAddExpressionRule());
							}
							set(
								$current,
								"left",
								lv_left_7_0,
								"com.shark.lang.Dd.SharkExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						(
							lv_op_8_1=PlusSign
							{
								newLeafNode(lv_op_8_1, grammarAccess.getAddExpressionAccess().getOpPlusSignKeyword_0_1_2_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getAddExpressionRule());
								}
								setWithLastConsumed($current, "op", lv_op_8_1, null);
							}
							    |
							lv_op_8_2=HyphenMinus
							{
								newLeafNode(lv_op_8_2, grammarAccess.getAddExpressionAccess().getOpHyphenMinusKeyword_0_1_2_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getAddExpressionRule());
								}
								setWithLastConsumed($current, "op", lv_op_8_2, null);
							}
						)
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getAddExpressionAccess().getRightSharkExpressionParserRuleCall_0_1_3_0());
						}
						lv_right_9_0=ruleSharkExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAddExpressionRule());
							}
							set(
								$current,
								"right",
								lv_right_9_0,
								"com.shark.lang.Dd.SharkExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getAddExpressionAccess().getAddEltsAddExpressionEltParserRuleCall_0_1_4_0());
						}
						lv_addElts_10_0=ruleAddExpressionElt
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAddExpressionRule());
							}
							add(
								$current,
								"addElts",
								lv_addElts_10_0,
								"com.shark.lang.Dd.AddExpressionElt");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				otherlv_11=RightSquareBracket
				{
					newLeafNode(otherlv_11, grammarAccess.getAddExpressionAccess().getRightSquareBracketKeyword_0_1_5());
				}
			)
			    |
			(
				otherlv_12=LeftCurlyBracket
				{
					newLeafNode(otherlv_12, grammarAccess.getAddExpressionAccess().getLeftCurlyBracketKeyword_0_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAddExpressionAccess().getLeftSharkExpressionParserRuleCall_0_2_1_0());
						}
						lv_left_13_0=ruleSharkExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAddExpressionRule());
							}
							set(
								$current,
								"left",
								lv_left_13_0,
								"com.shark.lang.Dd.SharkExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						(
							lv_op_14_1=PlusSign
							{
								newLeafNode(lv_op_14_1, grammarAccess.getAddExpressionAccess().getOpPlusSignKeyword_0_2_2_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getAddExpressionRule());
								}
								setWithLastConsumed($current, "op", lv_op_14_1, null);
							}
							    |
							lv_op_14_2=HyphenMinus
							{
								newLeafNode(lv_op_14_2, grammarAccess.getAddExpressionAccess().getOpHyphenMinusKeyword_0_2_2_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getAddExpressionRule());
								}
								setWithLastConsumed($current, "op", lv_op_14_2, null);
							}
						)
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getAddExpressionAccess().getRightSharkExpressionParserRuleCall_0_2_3_0());
						}
						lv_right_15_0=ruleSharkExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAddExpressionRule());
							}
							set(
								$current,
								"right",
								lv_right_15_0,
								"com.shark.lang.Dd.SharkExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getAddExpressionAccess().getAddEltsAddExpressionEltParserRuleCall_0_2_4_0());
						}
						lv_addElts_16_0=ruleAddExpressionElt
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAddExpressionRule());
							}
							add(
								$current,
								"addElts",
								lv_addElts_16_0,
								"com.shark.lang.Dd.AddExpressionElt");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				otherlv_17=RightCurlyBracket
				{
					newLeafNode(otherlv_17, grammarAccess.getAddExpressionAccess().getRightCurlyBracketKeyword_0_2_5());
				}
			)
		)
		(
			(
				(
					lv_exprValue_18_0=RULE_NUL
					{
						newLeafNode(lv_exprValue_18_0, grammarAccess.getAddExpressionAccess().getExprValueNULTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAddExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"exprValue",
							lv_exprValue_18_0,
							"com.shark.lang.Dd.NUL");
					}
				)
			)
			(
				(
					lv_precision_19_0=RULE_INT
					{
						newLeafNode(lv_precision_19_0, grammarAccess.getAddExpressionAccess().getPrecisionINTTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAddExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"precision",
							lv_precision_19_0,
							"com.shark.lang.Dd.INT");
					}
				)
			)
			(
				(
					lv_length_20_0=RULE_INT
					{
						newLeafNode(lv_length_20_0, grammarAccess.getAddExpressionAccess().getLengthINTTerminalRuleCall_1_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAddExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"length",
							lv_length_20_0,
							"com.shark.lang.Dd.INT");
					}
				)
			)
			(
				(
					lv_hasAttribute_21_0=RULE_INT
					{
						newLeafNode(lv_hasAttribute_21_0, grammarAccess.getAddExpressionAccess().getHasAttributeINTTerminalRuleCall_1_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAddExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"hasAttribute",
							lv_hasAttribute_21_0,
							"com.shark.lang.Dd.INT");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleAddExpressionElt
entryRuleAddExpressionElt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAddExpressionEltRule()); }
	iv_ruleAddExpressionElt=ruleAddExpressionElt
	{ $current=$iv_ruleAddExpressionElt.current; }
	EOF;

// Rule AddExpressionElt
ruleAddExpressionElt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_op_0_0=PlusSign
				{
					newLeafNode(lv_op_0_0, grammarAccess.getAddExpressionEltAccess().getOpPlusSignKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAddExpressionEltRule());
					}
					setWithLastConsumed($current, "op", lv_op_0_0, "+");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAddExpressionEltAccess().getRightSharkExpressionParserRuleCall_1_0());
				}
				lv_right_1_0=ruleSharkExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAddExpressionEltRule());
					}
					set(
						$current,
						"right",
						lv_right_1_0,
						"com.shark.lang.Dd.SharkExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMultExpression
entryRuleMultExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultExpressionRule()); }
	iv_ruleMultExpression=ruleMultExpression
	{ $current=$iv_ruleMultExpression.current; }
	EOF;

// Rule MultExpression
ruleMultExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				otherlv_0=LeftParenthesis
				{
					newLeafNode(otherlv_0, grammarAccess.getMultExpressionAccess().getLeftParenthesisKeyword_0_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMultExpressionAccess().getLeftSharkExpressionParserRuleCall_0_0_1_0());
						}
						lv_left_1_0=ruleSharkExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMultExpressionRule());
							}
							set(
								$current,
								"left",
								lv_left_1_0,
								"com.shark.lang.Dd.SharkExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						lv_op_2_0=Asterisk
						{
							newLeafNode(lv_op_2_0, grammarAccess.getMultExpressionAccess().getOpAsteriskKeyword_0_0_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMultExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_0, "*");
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getMultExpressionAccess().getRightSharkExpressionParserRuleCall_0_0_3_0());
						}
						lv_right_3_0=ruleSharkExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMultExpressionRule());
							}
							set(
								$current,
								"right",
								lv_right_3_0,
								"com.shark.lang.Dd.SharkExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getMultExpressionAccess().getMultEltsMultExpressionEltParserRuleCall_0_0_4_0());
						}
						lv_multElts_4_0=ruleMultExpressionElt
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMultExpressionRule());
							}
							add(
								$current,
								"multElts",
								lv_multElts_4_0,
								"com.shark.lang.Dd.MultExpressionElt");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				otherlv_5=RightParenthesis
				{
					newLeafNode(otherlv_5, grammarAccess.getMultExpressionAccess().getRightParenthesisKeyword_0_0_5());
				}
			)
			    |
			(
				otherlv_6=LeftSquareBracket
				{
					newLeafNode(otherlv_6, grammarAccess.getMultExpressionAccess().getLeftSquareBracketKeyword_0_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMultExpressionAccess().getLeftSharkExpressionParserRuleCall_0_1_1_0());
						}
						lv_left_7_0=ruleSharkExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMultExpressionRule());
							}
							set(
								$current,
								"left",
								lv_left_7_0,
								"com.shark.lang.Dd.SharkExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						lv_op_8_0=Asterisk
						{
							newLeafNode(lv_op_8_0, grammarAccess.getMultExpressionAccess().getOpAsteriskKeyword_0_1_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMultExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_8_0, "*");
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getMultExpressionAccess().getRightSharkExpressionParserRuleCall_0_1_3_0());
						}
						lv_right_9_0=ruleSharkExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMultExpressionRule());
							}
							set(
								$current,
								"right",
								lv_right_9_0,
								"com.shark.lang.Dd.SharkExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getMultExpressionAccess().getMultEltsMultExpressionEltParserRuleCall_0_1_4_0());
						}
						lv_multElts_10_0=ruleMultExpressionElt
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMultExpressionRule());
							}
							add(
								$current,
								"multElts",
								lv_multElts_10_0,
								"com.shark.lang.Dd.MultExpressionElt");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				otherlv_11=RightSquareBracket
				{
					newLeafNode(otherlv_11, grammarAccess.getMultExpressionAccess().getRightSquareBracketKeyword_0_1_5());
				}
			)
			    |
			(
				otherlv_12=LeftCurlyBracket
				{
					newLeafNode(otherlv_12, grammarAccess.getMultExpressionAccess().getLeftCurlyBracketKeyword_0_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMultExpressionAccess().getLeftSharkExpressionParserRuleCall_0_2_1_0());
						}
						lv_left_13_0=ruleSharkExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMultExpressionRule());
							}
							set(
								$current,
								"left",
								lv_left_13_0,
								"com.shark.lang.Dd.SharkExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						lv_op_14_0=Asterisk
						{
							newLeafNode(lv_op_14_0, grammarAccess.getMultExpressionAccess().getOpAsteriskKeyword_0_2_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMultExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_14_0, "*");
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getMultExpressionAccess().getRightSharkExpressionParserRuleCall_0_2_3_0());
						}
						lv_right_15_0=ruleSharkExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMultExpressionRule());
							}
							set(
								$current,
								"right",
								lv_right_15_0,
								"com.shark.lang.Dd.SharkExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getMultExpressionAccess().getMultEltsMultExpressionEltParserRuleCall_0_2_4_0());
						}
						lv_multElts_16_0=ruleMultExpressionElt
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMultExpressionRule());
							}
							add(
								$current,
								"multElts",
								lv_multElts_16_0,
								"com.shark.lang.Dd.MultExpressionElt");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				otherlv_17=RightCurlyBracket
				{
					newLeafNode(otherlv_17, grammarAccess.getMultExpressionAccess().getRightCurlyBracketKeyword_0_2_5());
				}
			)
		)
		(
			(
				(
					lv_exprValue_18_0=RULE_NUL
					{
						newLeafNode(lv_exprValue_18_0, grammarAccess.getMultExpressionAccess().getExprValueNULTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMultExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"exprValue",
							lv_exprValue_18_0,
							"com.shark.lang.Dd.NUL");
					}
				)
			)
			(
				(
					lv_precision_19_0=RULE_INT
					{
						newLeafNode(lv_precision_19_0, grammarAccess.getMultExpressionAccess().getPrecisionINTTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMultExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"precision",
							lv_precision_19_0,
							"com.shark.lang.Dd.INT");
					}
				)
			)
			(
				(
					lv_length_20_0=RULE_INT
					{
						newLeafNode(lv_length_20_0, grammarAccess.getMultExpressionAccess().getLengthINTTerminalRuleCall_1_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMultExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"length",
							lv_length_20_0,
							"com.shark.lang.Dd.INT");
					}
				)
			)
			(
				(
					lv_hasAttribute_21_0=RULE_INT
					{
						newLeafNode(lv_hasAttribute_21_0, grammarAccess.getMultExpressionAccess().getHasAttributeINTTerminalRuleCall_1_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMultExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"hasAttribute",
							lv_hasAttribute_21_0,
							"com.shark.lang.Dd.INT");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleMultExpressionElt
entryRuleMultExpressionElt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultExpressionEltRule()); }
	iv_ruleMultExpressionElt=ruleMultExpressionElt
	{ $current=$iv_ruleMultExpressionElt.current; }
	EOF;

// Rule MultExpressionElt
ruleMultExpressionElt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_op_0_0=Asterisk
				{
					newLeafNode(lv_op_0_0, grammarAccess.getMultExpressionEltAccess().getOpAsteriskKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMultExpressionEltRule());
					}
					setWithLastConsumed($current, "op", lv_op_0_0, "*");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMultExpressionEltAccess().getRightSharkExpressionParserRuleCall_1_0());
				}
				lv_right_1_0=ruleSharkExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMultExpressionEltRule());
					}
					set(
						$current,
						"right",
						lv_right_1_0,
						"com.shark.lang.Dd.SharkExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAndExpression
entryRuleAndExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndExpressionRule()); }
	iv_ruleAndExpression=ruleAndExpression
	{ $current=$iv_ruleAndExpression.current; }
	EOF;

// Rule AndExpression
ruleAndExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				otherlv_0=LeftParenthesis
				{
					newLeafNode(otherlv_0, grammarAccess.getAndExpressionAccess().getLeftParenthesisKeyword_0_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAndExpressionAccess().getLeftSharkExpressionParserRuleCall_0_0_1_0());
						}
						lv_left_1_0=ruleSharkExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAndExpressionRule());
							}
							set(
								$current,
								"left",
								lv_left_1_0,
								"com.shark.lang.Dd.SharkExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						lv_op_2_0=And
						{
							newLeafNode(lv_op_2_0, grammarAccess.getAndExpressionAccess().getOpAndKeyword_0_0_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAndExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_0, "and");
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getAndExpressionAccess().getRightSharkExpressionParserRuleCall_0_0_3_0());
						}
						lv_right_3_0=ruleSharkExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAndExpressionRule());
							}
							set(
								$current,
								"right",
								lv_right_3_0,
								"com.shark.lang.Dd.SharkExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getAndExpressionAccess().getAndEltsAndExpressionEltParserRuleCall_0_0_4_0());
						}
						lv_andElts_4_0=ruleAndExpressionElt
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAndExpressionRule());
							}
							add(
								$current,
								"andElts",
								lv_andElts_4_0,
								"com.shark.lang.Dd.AndExpressionElt");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				otherlv_5=RightParenthesis
				{
					newLeafNode(otherlv_5, grammarAccess.getAndExpressionAccess().getRightParenthesisKeyword_0_0_5());
				}
			)
			    |
			(
				otherlv_6=LeftSquareBracket
				{
					newLeafNode(otherlv_6, grammarAccess.getAndExpressionAccess().getLeftSquareBracketKeyword_0_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAndExpressionAccess().getLeftSharkExpressionParserRuleCall_0_1_1_0());
						}
						lv_left_7_0=ruleSharkExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAndExpressionRule());
							}
							set(
								$current,
								"left",
								lv_left_7_0,
								"com.shark.lang.Dd.SharkExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						lv_op_8_0=And
						{
							newLeafNode(lv_op_8_0, grammarAccess.getAndExpressionAccess().getOpAndKeyword_0_1_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAndExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_8_0, "and");
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getAndExpressionAccess().getRightSharkExpressionParserRuleCall_0_1_3_0());
						}
						lv_right_9_0=ruleSharkExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAndExpressionRule());
							}
							set(
								$current,
								"right",
								lv_right_9_0,
								"com.shark.lang.Dd.SharkExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getAndExpressionAccess().getAndEltsAndExpressionEltParserRuleCall_0_1_4_0());
						}
						lv_andElts_10_0=ruleAndExpressionElt
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAndExpressionRule());
							}
							add(
								$current,
								"andElts",
								lv_andElts_10_0,
								"com.shark.lang.Dd.AndExpressionElt");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				otherlv_11=RightSquareBracket
				{
					newLeafNode(otherlv_11, grammarAccess.getAndExpressionAccess().getRightSquareBracketKeyword_0_1_5());
				}
			)
			    |
			(
				otherlv_12=LeftCurlyBracket
				{
					newLeafNode(otherlv_12, grammarAccess.getAndExpressionAccess().getLeftCurlyBracketKeyword_0_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAndExpressionAccess().getLeftSharkExpressionParserRuleCall_0_2_1_0());
						}
						lv_left_13_0=ruleSharkExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAndExpressionRule());
							}
							set(
								$current,
								"left",
								lv_left_13_0,
								"com.shark.lang.Dd.SharkExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						lv_op_14_0=And
						{
							newLeafNode(lv_op_14_0, grammarAccess.getAndExpressionAccess().getOpAndKeyword_0_2_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAndExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_14_0, "and");
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getAndExpressionAccess().getRightSharkExpressionParserRuleCall_0_2_3_0());
						}
						lv_right_15_0=ruleSharkExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAndExpressionRule());
							}
							set(
								$current,
								"right",
								lv_right_15_0,
								"com.shark.lang.Dd.SharkExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getAndExpressionAccess().getAndEltsAndExpressionEltParserRuleCall_0_2_4_0());
						}
						lv_andElts_16_0=ruleAndExpressionElt
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAndExpressionRule());
							}
							add(
								$current,
								"andElts",
								lv_andElts_16_0,
								"com.shark.lang.Dd.AndExpressionElt");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				otherlv_17=RightCurlyBracket
				{
					newLeafNode(otherlv_17, grammarAccess.getAndExpressionAccess().getRightCurlyBracketKeyword_0_2_5());
				}
			)
		)
		(
			(
				(
					lv_exprValue_18_0=RULE_NUL
					{
						newLeafNode(lv_exprValue_18_0, grammarAccess.getAndExpressionAccess().getExprValueNULTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAndExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"exprValue",
							lv_exprValue_18_0,
							"com.shark.lang.Dd.NUL");
					}
				)
			)
			(
				(
					lv_hasAttribute_19_0=RULE_INT
					{
						newLeafNode(lv_hasAttribute_19_0, grammarAccess.getAndExpressionAccess().getHasAttributeINTTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAndExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"hasAttribute",
							lv_hasAttribute_19_0,
							"com.shark.lang.Dd.INT");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleAndExpressionElt
entryRuleAndExpressionElt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndExpressionEltRule()); }
	iv_ruleAndExpressionElt=ruleAndExpressionElt
	{ $current=$iv_ruleAndExpressionElt.current; }
	EOF;

// Rule AndExpressionElt
ruleAndExpressionElt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_op_0_0=And
				{
					newLeafNode(lv_op_0_0, grammarAccess.getAndExpressionEltAccess().getOpAndKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAndExpressionEltRule());
					}
					setWithLastConsumed($current, "op", lv_op_0_0, "and");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAndExpressionEltAccess().getRightSharkExpressionParserRuleCall_1_0());
				}
				lv_right_1_0=ruleSharkExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAndExpressionEltRule());
					}
					set(
						$current,
						"right",
						lv_right_1_0,
						"com.shark.lang.Dd.SharkExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOrExpression
entryRuleOrExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrExpressionRule()); }
	iv_ruleOrExpression=ruleOrExpression
	{ $current=$iv_ruleOrExpression.current; }
	EOF;

// Rule OrExpression
ruleOrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				otherlv_0=LeftParenthesis
				{
					newLeafNode(otherlv_0, grammarAccess.getOrExpressionAccess().getLeftParenthesisKeyword_0_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getOrExpressionAccess().getLeftSharkExpressionParserRuleCall_0_0_1_0());
						}
						lv_left_1_0=ruleSharkExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOrExpressionRule());
							}
							set(
								$current,
								"left",
								lv_left_1_0,
								"com.shark.lang.Dd.SharkExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						lv_op_2_0=Or
						{
							newLeafNode(lv_op_2_0, grammarAccess.getOrExpressionAccess().getOpOrKeyword_0_0_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getOrExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_0, "or");
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getOrExpressionAccess().getRightSharkExpressionParserRuleCall_0_0_3_0());
						}
						lv_right_3_0=ruleSharkExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOrExpressionRule());
							}
							set(
								$current,
								"right",
								lv_right_3_0,
								"com.shark.lang.Dd.SharkExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getOrExpressionAccess().getOrEltsOrExpressionEltParserRuleCall_0_0_4_0());
						}
						lv_orElts_4_0=ruleOrExpressionElt
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOrExpressionRule());
							}
							add(
								$current,
								"orElts",
								lv_orElts_4_0,
								"com.shark.lang.Dd.OrExpressionElt");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				otherlv_5=RightParenthesis
				{
					newLeafNode(otherlv_5, grammarAccess.getOrExpressionAccess().getRightParenthesisKeyword_0_0_5());
				}
			)
			    |
			(
				otherlv_6=LeftSquareBracket
				{
					newLeafNode(otherlv_6, grammarAccess.getOrExpressionAccess().getLeftSquareBracketKeyword_0_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getOrExpressionAccess().getLeftSharkExpressionParserRuleCall_0_1_1_0());
						}
						lv_left_7_0=ruleSharkExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOrExpressionRule());
							}
							set(
								$current,
								"left",
								lv_left_7_0,
								"com.shark.lang.Dd.SharkExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						lv_op_8_0=Or
						{
							newLeafNode(lv_op_8_0, grammarAccess.getOrExpressionAccess().getOpOrKeyword_0_1_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getOrExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_8_0, "or");
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getOrExpressionAccess().getRightSharkExpressionParserRuleCall_0_1_3_0());
						}
						lv_right_9_0=ruleSharkExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOrExpressionRule());
							}
							set(
								$current,
								"right",
								lv_right_9_0,
								"com.shark.lang.Dd.SharkExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getOrExpressionAccess().getOrEltsOrExpressionEltParserRuleCall_0_1_4_0());
						}
						lv_orElts_10_0=ruleOrExpressionElt
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOrExpressionRule());
							}
							add(
								$current,
								"orElts",
								lv_orElts_10_0,
								"com.shark.lang.Dd.OrExpressionElt");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				otherlv_11=RightSquareBracket
				{
					newLeafNode(otherlv_11, grammarAccess.getOrExpressionAccess().getRightSquareBracketKeyword_0_1_5());
				}
			)
			    |
			(
				otherlv_12=LeftCurlyBracket
				{
					newLeafNode(otherlv_12, grammarAccess.getOrExpressionAccess().getLeftCurlyBracketKeyword_0_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getOrExpressionAccess().getLeftSharkExpressionParserRuleCall_0_2_1_0());
						}
						lv_left_13_0=ruleSharkExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOrExpressionRule());
							}
							set(
								$current,
								"left",
								lv_left_13_0,
								"com.shark.lang.Dd.SharkExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						lv_op_14_0=Or
						{
							newLeafNode(lv_op_14_0, grammarAccess.getOrExpressionAccess().getOpOrKeyword_0_2_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getOrExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_14_0, "or");
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getOrExpressionAccess().getRightSharkExpressionParserRuleCall_0_2_3_0());
						}
						lv_right_15_0=ruleSharkExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOrExpressionRule());
							}
							set(
								$current,
								"right",
								lv_right_15_0,
								"com.shark.lang.Dd.SharkExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getOrExpressionAccess().getOrEltsOrExpressionEltParserRuleCall_0_2_4_0());
						}
						lv_orElts_16_0=ruleOrExpressionElt
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOrExpressionRule());
							}
							add(
								$current,
								"orElts",
								lv_orElts_16_0,
								"com.shark.lang.Dd.OrExpressionElt");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				otherlv_17=RightCurlyBracket
				{
					newLeafNode(otherlv_17, grammarAccess.getOrExpressionAccess().getRightCurlyBracketKeyword_0_2_5());
				}
			)
		)
		(
			(
				(
					lv_exprValue_18_0=RULE_NUL
					{
						newLeafNode(lv_exprValue_18_0, grammarAccess.getOrExpressionAccess().getExprValueNULTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOrExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"exprValue",
							lv_exprValue_18_0,
							"com.shark.lang.Dd.NUL");
					}
				)
			)
			(
				(
					lv_hasAttribute_19_0=RULE_INT
					{
						newLeafNode(lv_hasAttribute_19_0, grammarAccess.getOrExpressionAccess().getHasAttributeINTTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOrExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"hasAttribute",
							lv_hasAttribute_19_0,
							"com.shark.lang.Dd.INT");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleOrExpressionElt
entryRuleOrExpressionElt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrExpressionEltRule()); }
	iv_ruleOrExpressionElt=ruleOrExpressionElt
	{ $current=$iv_ruleOrExpressionElt.current; }
	EOF;

// Rule OrExpressionElt
ruleOrExpressionElt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_op_0_0=Or
				{
					newLeafNode(lv_op_0_0, grammarAccess.getOrExpressionEltAccess().getOpOrKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOrExpressionEltRule());
					}
					setWithLastConsumed($current, "op", lv_op_0_0, "or");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getOrExpressionEltAccess().getRightSharkExpressionParserRuleCall_1_0());
				}
				lv_right_1_0=ruleSharkExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOrExpressionEltRule());
					}
					set(
						$current,
						"right",
						lv_right_1_0,
						"com.shark.lang.Dd.SharkExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCatExpression
entryRuleCatExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCatExpressionRule()); }
	iv_ruleCatExpression=ruleCatExpression
	{ $current=$iv_ruleCatExpression.current; }
	EOF;

// Rule CatExpression
ruleCatExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				otherlv_0=LeftParenthesis
				{
					newLeafNode(otherlv_0, grammarAccess.getCatExpressionAccess().getLeftParenthesisKeyword_0_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCatExpressionAccess().getLeftSharkExpressionParserRuleCall_0_0_1_0());
						}
						lv_left_1_0=ruleSharkExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCatExpressionRule());
							}
							set(
								$current,
								"left",
								lv_left_1_0,
								"com.shark.lang.Dd.SharkExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						lv_op_2_0=Ampersand
						{
							newLeafNode(lv_op_2_0, grammarAccess.getCatExpressionAccess().getOpAmpersandKeyword_0_0_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getCatExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_0, "&");
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getCatExpressionAccess().getRightSharkExpressionParserRuleCall_0_0_3_0());
						}
						lv_right_3_0=ruleSharkExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCatExpressionRule());
							}
							set(
								$current,
								"right",
								lv_right_3_0,
								"com.shark.lang.Dd.SharkExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getCatExpressionAccess().getCatEltsCatExpressionEltParserRuleCall_0_0_4_0());
						}
						lv_catElts_4_0=ruleCatExpressionElt
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCatExpressionRule());
							}
							add(
								$current,
								"catElts",
								lv_catElts_4_0,
								"com.shark.lang.Dd.CatExpressionElt");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				otherlv_5=RightParenthesis
				{
					newLeafNode(otherlv_5, grammarAccess.getCatExpressionAccess().getRightParenthesisKeyword_0_0_5());
				}
			)
			    |
			(
				otherlv_6=LeftSquareBracket
				{
					newLeafNode(otherlv_6, grammarAccess.getCatExpressionAccess().getLeftSquareBracketKeyword_0_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCatExpressionAccess().getLeftSharkExpressionParserRuleCall_0_1_1_0());
						}
						lv_left_7_0=ruleSharkExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCatExpressionRule());
							}
							set(
								$current,
								"left",
								lv_left_7_0,
								"com.shark.lang.Dd.SharkExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						lv_op_8_0=Ampersand
						{
							newLeafNode(lv_op_8_0, grammarAccess.getCatExpressionAccess().getOpAmpersandKeyword_0_1_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getCatExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_8_0, "&");
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getCatExpressionAccess().getRightSharkExpressionParserRuleCall_0_1_3_0());
						}
						lv_right_9_0=ruleSharkExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCatExpressionRule());
							}
							set(
								$current,
								"right",
								lv_right_9_0,
								"com.shark.lang.Dd.SharkExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getCatExpressionAccess().getCatEltsCatExpressionEltParserRuleCall_0_1_4_0());
						}
						lv_catElts_10_0=ruleCatExpressionElt
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCatExpressionRule());
							}
							add(
								$current,
								"catElts",
								lv_catElts_10_0,
								"com.shark.lang.Dd.CatExpressionElt");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				otherlv_11=RightSquareBracket
				{
					newLeafNode(otherlv_11, grammarAccess.getCatExpressionAccess().getRightSquareBracketKeyword_0_1_5());
				}
			)
			    |
			(
				otherlv_12=LeftCurlyBracket
				{
					newLeafNode(otherlv_12, grammarAccess.getCatExpressionAccess().getLeftCurlyBracketKeyword_0_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCatExpressionAccess().getLeftSharkExpressionParserRuleCall_0_2_1_0());
						}
						lv_left_13_0=ruleSharkExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCatExpressionRule());
							}
							set(
								$current,
								"left",
								lv_left_13_0,
								"com.shark.lang.Dd.SharkExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						lv_op_14_0=Ampersand
						{
							newLeafNode(lv_op_14_0, grammarAccess.getCatExpressionAccess().getOpAmpersandKeyword_0_2_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getCatExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_14_0, "&");
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getCatExpressionAccess().getRightSharkExpressionParserRuleCall_0_2_3_0());
						}
						lv_right_15_0=ruleSharkExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCatExpressionRule());
							}
							set(
								$current,
								"right",
								lv_right_15_0,
								"com.shark.lang.Dd.SharkExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getCatExpressionAccess().getCatEltsCatExpressionEltParserRuleCall_0_2_4_0());
						}
						lv_catElts_16_0=ruleCatExpressionElt
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCatExpressionRule());
							}
							add(
								$current,
								"catElts",
								lv_catElts_16_0,
								"com.shark.lang.Dd.CatExpressionElt");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				otherlv_17=RightCurlyBracket
				{
					newLeafNode(otherlv_17, grammarAccess.getCatExpressionAccess().getRightCurlyBracketKeyword_0_2_5());
				}
			)
		)
		(
			(
				(
					lv_exprValue_18_0=RULE_NUL
					{
						newLeafNode(lv_exprValue_18_0, grammarAccess.getCatExpressionAccess().getExprValueNULTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCatExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"exprValue",
							lv_exprValue_18_0,
							"com.shark.lang.Dd.NUL");
					}
				)
			)
			(
				(
					lv_length_19_0=RULE_INT
					{
						newLeafNode(lv_length_19_0, grammarAccess.getCatExpressionAccess().getLengthINTTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCatExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"length",
							lv_length_19_0,
							"com.shark.lang.Dd.INT");
					}
				)
			)
			(
				(
					lv_hasAttribute_20_0=RULE_INT
					{
						newLeafNode(lv_hasAttribute_20_0, grammarAccess.getCatExpressionAccess().getHasAttributeINTTerminalRuleCall_1_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCatExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"hasAttribute",
							lv_hasAttribute_20_0,
							"com.shark.lang.Dd.INT");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleCatExpressionElt
entryRuleCatExpressionElt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCatExpressionEltRule()); }
	iv_ruleCatExpressionElt=ruleCatExpressionElt
	{ $current=$iv_ruleCatExpressionElt.current; }
	EOF;

// Rule CatExpressionElt
ruleCatExpressionElt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_op_0_0=Ampersand
				{
					newLeafNode(lv_op_0_0, grammarAccess.getCatExpressionEltAccess().getOpAmpersandKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCatExpressionEltRule());
					}
					setWithLastConsumed($current, "op", lv_op_0_0, "&");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCatExpressionEltAccess().getRightSharkExpressionParserRuleCall_1_0());
				}
				lv_right_1_0=ruleSharkExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCatExpressionEltRule());
					}
					set(
						$current,
						"right",
						lv_right_1_0,
						"com.shark.lang.Dd.SharkExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleListExpression
entryRuleListExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListExpressionRule()); }
	iv_ruleListExpression=ruleListExpression
	{ $current=$iv_ruleListExpression.current; }
	EOF;

// Rule ListExpression
ruleListExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_op_0_0=LeftParenthesis
				{
					newLeafNode(lv_op_0_0, grammarAccess.getListExpressionAccess().getOpLeftParenthesisKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getListExpressionRule());
					}
					setWithLastConsumed($current, "op", lv_op_0_0, "(");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getListExpressionAccess().getLeftSharkExpressionParserRuleCall_1_0());
				}
				lv_left_1_0=ruleSharkExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getListExpressionRule());
					}
					set(
						$current,
						"left",
						lv_left_1_0,
						"com.shark.lang.Dd.SharkExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getListExpressionAccess().getListEltsListExpressionEltParserRuleCall_2_0());
				}
				lv_ListElts_2_0=ruleListExpressionElt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getListExpressionRule());
					}
					add(
						$current,
						"ListElts",
						lv_ListElts_2_0,
						"com.shark.lang.Dd.ListExpressionElt");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_3=RightParenthesis
		{
			newLeafNode(otherlv_3, grammarAccess.getListExpressionAccess().getRightParenthesisKeyword_3());
		}
		(
			(
				(
					lv_exprValue_4_0=RULE_NUL
					{
						newLeafNode(lv_exprValue_4_0, grammarAccess.getListExpressionAccess().getExprValueNULTerminalRuleCall_4_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getListExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"exprValue",
							lv_exprValue_4_0,
							"com.shark.lang.Dd.NUL");
					}
				)
			)
			(
				(
					lv_hasAttribute_5_0=RULE_INT
					{
						newLeafNode(lv_hasAttribute_5_0, grammarAccess.getListExpressionAccess().getHasAttributeINTTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getListExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"hasAttribute",
							lv_hasAttribute_5_0,
							"com.shark.lang.Dd.INT");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleListExpressionElt
entryRuleListExpressionElt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListExpressionEltRule()); }
	iv_ruleListExpressionElt=ruleListExpressionElt
	{ $current=$iv_ruleListExpressionElt.current; }
	EOF;

// Rule ListExpressionElt
ruleListExpressionElt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_op_0_0=Comma
				{
					newLeafNode(lv_op_0_0, grammarAccess.getListExpressionEltAccess().getOpCommaKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getListExpressionEltRule());
					}
					setWithLastConsumed($current, "op", lv_op_0_0, ",");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getListExpressionEltAccess().getRightSharkExpressionParserRuleCall_1_0());
				}
				lv_right_1_0=ruleSharkExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getListExpressionEltRule());
					}
					set(
						$current,
						"right",
						lv_right_1_0,
						"com.shark.lang.Dd.SharkExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRangeExpression
entryRuleRangeExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRangeExpressionRule()); }
	iv_ruleRangeExpression=ruleRangeExpression
	{ $current=$iv_ruleRangeExpression.current; }
	EOF;

// Rule RangeExpression
ruleRangeExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getRangeExpressionAccess().getListExpressionAction_0_0(),
						$current);
				}
			)
			otherlv_1=LeftParenthesis
			{
				newLeafNode(otherlv_1, grammarAccess.getRangeExpressionAccess().getLeftParenthesisKeyword_0_1());
			}
			(
				(
					lv_range_2_0=RULE_RANGE
					{
						newLeafNode(lv_range_2_0, grammarAccess.getRangeExpressionAccess().getRangeRANGETerminalRuleCall_0_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRangeExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"range",
							lv_range_2_0,
							"com.shark.lang.Dd.RANGE");
					}
				)
			)
			otherlv_3=RightParenthesis
			{
				newLeafNode(otherlv_3, grammarAccess.getRangeExpressionAccess().getRightParenthesisKeyword_0_3());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getRangeExpressionAccess().getListExpressionAction_1_0(),
						$current);
				}
			)
			(
				(LeftParenthesis)=>
				otherlv_5=LeftParenthesis
				{
					newLeafNode(otherlv_5, grammarAccess.getRangeExpressionAccess().getLeftParenthesisKeyword_1_1());
				}
			)
			(
				(
					lv_range_6_0=RULE_RANGEINF
					{
						newLeafNode(lv_range_6_0, grammarAccess.getRangeExpressionAccess().getRangeRANGEINFTerminalRuleCall_1_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRangeExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"range",
							lv_range_6_0,
							"com.shark.lang.Dd.RANGEINF");
					}
				)
			)
			otherlv_7=RightParenthesis
			{
				newLeafNode(otherlv_7, grammarAccess.getRangeExpressionAccess().getRightParenthesisKeyword_1_3());
			}
		)
	)
;

// Entry rule entryRuleTerminalExpression
entryRuleTerminalExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTerminalExpressionRule()); }
	iv_ruleTerminalExpression=ruleTerminalExpression
	{ $current=$iv_ruleTerminalExpression.current; }
	EOF;

// Rule TerminalExpression
ruleTerminalExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getTerminalExpressionAccess().getStrValueAction_0_0_0(),
							$current);
					}
				)
				(
					(
						lv_value_1_0=RULE_STR
						{
							newLeafNode(lv_value_1_0, grammarAccess.getTerminalExpressionAccess().getValueSTRTerminalRuleCall_0_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTerminalExpressionRule());
							}
							setWithLastConsumed(
								$current,
								"value",
								lv_value_1_0,
								"com.shark.lang.Dd.STR");
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getTerminalExpressionAccess().getIntValueAction_0_1_0(),
							$current);
					}
				)
				(
					(
						lv_value_3_0=RULE_INT
						{
							newLeafNode(lv_value_3_0, grammarAccess.getTerminalExpressionAccess().getValueINTTerminalRuleCall_0_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTerminalExpressionRule());
							}
							setWithLastConsumed(
								$current,
								"value",
								lv_value_3_0,
								"com.shark.lang.Dd.INT");
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getTerminalExpressionAccess().getDecValueAction_0_2_0(),
							$current);
					}
				)
				(
					(
						lv_value_5_0=RULE_DEC
						{
							newLeafNode(lv_value_5_0, grammarAccess.getTerminalExpressionAccess().getValueDECTerminalRuleCall_0_2_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTerminalExpressionRule());
							}
							setWithLastConsumed(
								$current,
								"value",
								lv_value_5_0,
								"com.shark.lang.Dd.DEC");
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getTerminalExpressionAccess().getChrValueAction_0_3_0(),
							$current);
					}
				)
				(
					(
						lv_value_7_0=RULE_CHR
						{
							newLeafNode(lv_value_7_0, grammarAccess.getTerminalExpressionAccess().getValueCHRTerminalRuleCall_0_3_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTerminalExpressionRule());
							}
							setWithLastConsumed(
								$current,
								"value",
								lv_value_7_0,
								"com.shark.lang.Dd.CHR");
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getTerminalExpressionAccess().getCstValueAction_0_4_0(),
							$current);
					}
				)
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTerminalExpressionRule());
							}
						}
						otherlv_9=RULE_CSTID
						{
							newLeafNode(otherlv_9, grammarAccess.getTerminalExpressionAccess().getValueConstantCrossReference_0_4_1_0());
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getTerminalExpressionAccess().getIndexArraySizeParserRuleCall_0_4_2_0());
						}
						lv_index_10_0=ruleArraySize
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTerminalExpressionRule());
							}
							set(
								$current,
								"index",
								lv_index_10_0,
								"com.shark.lang.Dd.ArraySize");
							afterParserOrEnumRuleCall();
						}
					)
				)?
			)
			    |
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getTerminalExpressionAccess().getBoolValueAction_0_5_0(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getTerminalExpressionAccess().getValueBooleanEnumRuleCall_0_5_1_0());
						}
						lv_value_12_0=ruleBoolean
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTerminalExpressionRule());
							}
							set(
								$current,
								"value",
								lv_value_12_0,
								"com.shark.lang.Dd.Boolean");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getTerminalExpressionAccess().getUnsetValueAction_0_6_0(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getTerminalExpressionAccess().getValueUnsetEnumRuleCall_0_6_1_0());
						}
						lv_value_14_0=ruleUnset
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTerminalExpressionRule());
							}
							set(
								$current,
								"value",
								lv_value_14_0,
								"com.shark.lang.Dd.Unset");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getTerminalExpressionAccess().getAttributeValueAction_0_7_0(),
							$current);
					}
				)
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTerminalExpressionRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getTerminalExpressionAccess().getValueAttributeCrossReference_0_7_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getTerminalExpressionAccess().getIndexArraySizeParserRuleCall_0_7_2_0());
						}
						lv_index_17_0=ruleArraySize
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTerminalExpressionRule());
							}
							set(
								$current,
								"index",
								lv_index_17_0,
								"com.shark.lang.Dd.ArraySize");
							afterParserOrEnumRuleCall();
						}
					)
				)?
			)
		)
		(
			(
				(
					lv_exprValue_18_0=RULE_NUL
					{
						newLeafNode(lv_exprValue_18_0, grammarAccess.getTerminalExpressionAccess().getExprValueNULTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTerminalExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"exprValue",
							lv_exprValue_18_0,
							"com.shark.lang.Dd.NUL");
					}
				)
			)
			(
				(
					lv_hasAttribute_19_0=RULE_INT
					{
						newLeafNode(lv_hasAttribute_19_0, grammarAccess.getTerminalExpressionAccess().getHasAttributeINTTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTerminalExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"hasAttribute",
							lv_hasAttribute_19_0,
							"com.shark.lang.Dd.INT");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_OBJID_0=RULE_OBJID
			{
				$current.merge(this_OBJID_0);
			}
			{
				newLeafNode(this_OBJID_0, grammarAccess.getQualifiedNameAccess().getOBJIDTerminalRuleCall_0_0());
			}
			kw=FullStop
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_0_1());
			}
		)?
		this_ID_2=RULE_ID
		{
			$current.merge(this_ID_2);
		}
		{
			newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleLineComment
entryRuleLineComment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLineCommentRule()); }
	iv_ruleLineComment=ruleLineComment
	{ $current=$iv_ruleLineComment.current; }
	EOF;

// Rule LineComment
ruleLineComment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLineCommentAccess().getCommentAction_0(),
					$current);
			}
		)
		(
			(
				lv_line_1_0=RULE_CMT
				{
					newLeafNode(lv_line_1_0, grammarAccess.getLineCommentAccess().getLineCMTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLineCommentRule());
					}
					setWithLastConsumed(
						$current,
						"line",
						lv_line_1_0,
						"com.shark.lang.Dd.CMT");
				}
			)
		)
		this_EOL_2=RULE_EOL
		{
			newLeafNode(this_EOL_2, grammarAccess.getLineCommentAccess().getEOLTerminalRuleCall_2());
		}
	)
;

// Entry rule entryRuleTrailComment
entryRuleTrailComment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTrailCommentRule()); }
	iv_ruleTrailComment=ruleTrailComment
	{ $current=$iv_ruleTrailComment.current; }
	EOF;

// Rule TrailComment
ruleTrailComment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTrailCommentAccess().getCommentAction_0(),
					$current);
			}
		)
		(
			(
				lv_line_1_0=RULE_CMT
				{
					newLeafNode(lv_line_1_0, grammarAccess.getTrailCommentAccess().getLineCMTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTrailCommentRule());
					}
					setWithLastConsumed(
						$current,
						"line",
						lv_line_1_0,
						"com.shark.lang.Dd.CMT");
				}
			)
		)
	)
;

// Rule BinaryOperator
ruleBinaryOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0=Or
			{
				$current = grammarAccess.getBinaryOperatorAccess().getOpOrEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getBinaryOperatorAccess().getOpOrEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1=And
			{
				$current = grammarAccess.getBinaryOperatorAccess().getOpAndEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getBinaryOperatorAccess().getOpAndEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2=PlusSign
			{
				$current = grammarAccess.getBinaryOperatorAccess().getOpAddEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getBinaryOperatorAccess().getOpAddEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3=HyphenMinus
			{
				$current = grammarAccess.getBinaryOperatorAccess().getOpMinEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getBinaryOperatorAccess().getOpMinEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4=Asterisk
			{
				$current = grammarAccess.getBinaryOperatorAccess().getOpMultEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getBinaryOperatorAccess().getOpMultEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5=Solidus
			{
				$current = grammarAccess.getBinaryOperatorAccess().getOpDivEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getBinaryOperatorAccess().getOpDivEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6=PercentSign
			{
				$current = grammarAccess.getBinaryOperatorAccess().getOpModEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getBinaryOperatorAccess().getOpModEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7=EqualsSignEqualsSign
			{
				$current = grammarAccess.getBinaryOperatorAccess().getOpEqEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getBinaryOperatorAccess().getOpEqEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8=GreaterThanSign
			{
				$current = grammarAccess.getBinaryOperatorAccess().getOpGtEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getBinaryOperatorAccess().getOpGtEnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9=LessThanSign
			{
				$current = grammarAccess.getBinaryOperatorAccess().getOpLtEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getBinaryOperatorAccess().getOpLtEnumLiteralDeclaration_9());
			}
		)
		    |
		(
			enumLiteral_10=LessThanSignEqualsSign
			{
				$current = grammarAccess.getBinaryOperatorAccess().getOpLteEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_10, grammarAccess.getBinaryOperatorAccess().getOpLteEnumLiteralDeclaration_10());
			}
		)
		    |
		(
			enumLiteral_11=GreaterThanSignEqualsSign
			{
				$current = grammarAccess.getBinaryOperatorAccess().getOpGteEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_11, grammarAccess.getBinaryOperatorAccess().getOpGteEnumLiteralDeclaration_11());
			}
		)
		    |
		(
			enumLiteral_12=CircumflexAccent
			{
				$current = grammarAccess.getBinaryOperatorAccess().getOpPowEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_12, grammarAccess.getBinaryOperatorAccess().getOpPowEnumLiteralDeclaration_12());
			}
		)
		    |
		(
			enumLiteral_13=Like
			{
				$current = grammarAccess.getBinaryOperatorAccess().getOpLikeEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_13, grammarAccess.getBinaryOperatorAccess().getOpLikeEnumLiteralDeclaration_13());
			}
		)
		    |
		(
			enumLiteral_14=ExclamationMarkEqualsSign
			{
				$current = grammarAccess.getBinaryOperatorAccess().getOpDifEnumLiteralDeclaration_14().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_14, grammarAccess.getBinaryOperatorAccess().getOpDifEnumLiteralDeclaration_14());
			}
		)
		    |
		(
			enumLiteral_15=Ampersand
			{
				$current = grammarAccess.getBinaryOperatorAccess().getOpCatEnumLiteralDeclaration_15().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_15, grammarAccess.getBinaryOperatorAccess().getOpCatEnumLiteralDeclaration_15());
			}
		)
		    |
		(
			enumLiteral_16=In
			{
				$current = grammarAccess.getBinaryOperatorAccess().getOpInEnumLiteralDeclaration_16().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_16, grammarAccess.getBinaryOperatorAccess().getOpInEnumLiteralDeclaration_16());
			}
		)
		    |
		(
			enumLiteral_17=Stxt
			{
				$current = grammarAccess.getBinaryOperatorAccess().getOpStxtEnumLiteralDeclaration_17().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_17, grammarAccess.getBinaryOperatorAccess().getOpStxtEnumLiteralDeclaration_17());
			}
		)
		    |
		(
			enumLiteral_18=Round
			{
				$current = grammarAccess.getBinaryOperatorAccess().getOpRoundEnumLiteralDeclaration_18().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_18, grammarAccess.getBinaryOperatorAccess().getOpRoundEnumLiteralDeclaration_18());
			}
		)
	)
;

// Rule UnaryOperator
ruleUnaryOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0=Not
			{
				$current = grammarAccess.getUnaryOperatorAccess().getOpNotEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getUnaryOperatorAccess().getOpNotEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1=HyphenMinus
			{
				$current = grammarAccess.getUnaryOperatorAccess().getOpNegEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getUnaryOperatorAccess().getOpNegEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2=Str
			{
				$current = grammarAccess.getUnaryOperatorAccess().getStrCastEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getUnaryOperatorAccess().getStrCastEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3=Int
			{
				$current = grammarAccess.getUnaryOperatorAccess().getIntCastEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getUnaryOperatorAccess().getIntCastEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4=Dec
			{
				$current = grammarAccess.getUnaryOperatorAccess().getDecCastEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getUnaryOperatorAccess().getDecCastEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5=Date
			{
				$current = grammarAccess.getUnaryOperatorAccess().getDateCastEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getUnaryOperatorAccess().getDateCastEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6=Time
			{
				$current = grammarAccess.getUnaryOperatorAccess().getTimeCastEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getUnaryOperatorAccess().getTimeCastEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7=Len
			{
				$current = grammarAccess.getUnaryOperatorAccess().getOpLenEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getUnaryOperatorAccess().getOpLenEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8=Stamp
			{
				$current = grammarAccess.getUnaryOperatorAccess().getStampCastEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getUnaryOperatorAccess().getStampCastEnumLiteralDeclaration_8());
			}
		)
	)
;

// Rule Unset
ruleUnset returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0=Unset
		{
			$current = grammarAccess.getUnsetAccess().getUnsetEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getUnsetAccess().getUnsetEnumLiteralDeclaration());
		}
	)
;

// Rule Boolean
ruleBoolean returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0=True
			{
				$current = grammarAccess.getBooleanAccess().getTrueCstEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getBooleanAccess().getTrueCstEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1=False
			{
				$current = grammarAccess.getBooleanAccess().getFalseCstEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getBooleanAccess().getFalseCstEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule DataType
ruleDataType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0=Str
			{
				$current = grammarAccess.getDataTypeAccess().getStrEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDataTypeAccess().getStrEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1=Dec
			{
				$current = grammarAccess.getDataTypeAccess().getDecEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDataTypeAccess().getDecEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2=Date
			{
				$current = grammarAccess.getDataTypeAccess().getDateEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getDataTypeAccess().getDateEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3=Time
			{
				$current = grammarAccess.getDataTypeAccess().getTimeEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getDataTypeAccess().getTimeEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4=Chr
			{
				$current = grammarAccess.getDataTypeAccess().getChrEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getDataTypeAccess().getChrEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5=Int
			{
				$current = grammarAccess.getDataTypeAccess().getIntEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getDataTypeAccess().getIntEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6=Stamp
			{
				$current = grammarAccess.getDataTypeAccess().getStampEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getDataTypeAccess().getStampEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7=Bits
			{
				$current = grammarAccess.getDataTypeAccess().getBitsEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getDataTypeAccess().getBitsEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8=Bool
			{
				$current = grammarAccess.getDataTypeAccess().getBoolEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getDataTypeAccess().getBoolEnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9=HalfwidthHangulFillerHalfwidthHangulFillerHalfwidthHangulFiller
			{
				$current = grammarAccess.getDataTypeAccess().getUnsetEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getDataTypeAccess().getUnsetEnumLiteralDeclaration_9());
			}
		)
	)
;
